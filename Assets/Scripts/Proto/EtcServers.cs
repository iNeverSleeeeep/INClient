// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: etc.servers.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from etc.servers.proto</summary>
public static partial class EtcServersReflection {

  #region Descriptor
  /// <summary>File descriptor for etc.servers.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static EtcServersReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFldGMuc2VydmVycy5wcm90bxoSZXRjLmRhdGFiYXNlLnByb3RvIlYKCkdh",
          "dGVDb25maWcSDAoEUG9ydBgBIAEoBRIYChBPdXRPZkRhdGVUaW1lb3V0GAIg",
          "ASgDEg8KB0FkZHJlc3MYAyABKAkSDwoHV2ViUG9ydBgEIAEoBSJJCgtMb2dp",
          "bkNvbmZpZxIMCgRQb3J0GAEgASgFEhsKCERhdGFiYXNlGAIgASgLMgkuRGF0",
          "YWJhc2USDwoHV2ViUG9ydBgDIAEoBSIMCgpDaGF0Q29uZmlnIi0KDkRhdGFi",
          "YXNlQ29uZmlnEhsKCERhdGFiYXNlGAEgASgLMgkuRGF0YWJhc2UiGQoJV2Vi",
          "Q29uZmlnEgwKBFBvcnQYASABKAUiLwoJWm9uZVdvcmxkEg4KBlpvbmVJRBgB",
          "IAEoBRISCgpTdGF0aWNNYXBzGAIgAygFIigKC1dvcmxkQ29uZmlnEhkKBVpv",
          "bmVzGAEgAygLMgouWm9uZVdvcmxkIt4BCgxTZXJ2ZXJDb25maWcSHwoKR2F0",
          "ZUNvbmZpZxgBIAEoCzILLkdhdGVDb25maWcSIQoLTG9naW5Db25maWcYAiAB",
          "KAsyDC5Mb2dpbkNvbmZpZxIfCgpDaGF0Q29uZmlnGAMgASgLMgsuQ2hhdENv",
          "bmZpZxInCg5EYXRhYmFzZUNvbmZpZxgEIAEoCzIPLkRhdGFiYXNlQ29uZmln",
          "Eh0KCVdlYkNvbmZpZxgFIAEoCzIKLldlYkNvbmZpZxIhCgtXb3JsZENvbmZp",
          "ZxgGIAEoCzIMLldvcmxkQ29uZmlnImUKBlNlcnZlchIQCghTZXJ2ZXJJRBgB",
          "IAEoBRISCgpTZXJ2ZXJUeXBlGAIgASgJEiMKDFNlcnZlckNvbmZpZxgDIAEo",
          "CzINLlNlcnZlckNvbmZpZxIQCghEZXNjcmliZRgEIAEoCSImCgpTZXJ2ZXJM",
          "aXN0EhgKB1NlcnZlcnMYASADKAsyBy5TZXJ2ZXJCGFoWSU5TZXJ2ZXIvc3Jj",
          "L3Byb3RvL2V0Y2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::EtcDatabaseReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GateConfig), global::GateConfig.Parser, new[]{ "Port", "OutOfDateTimeout", "Address", "WebPort" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginConfig), global::LoginConfig.Parser, new[]{ "Port", "Database", "WebPort" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChatConfig), global::ChatConfig.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DatabaseConfig), global::DatabaseConfig.Parser, new[]{ "Database" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WebConfig), global::WebConfig.Parser, new[]{ "Port" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ZoneWorld), global::ZoneWorld.Parser, new[]{ "ZoneID", "StaticMaps" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WorldConfig), global::WorldConfig.Parser, new[]{ "Zones" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerConfig), global::ServerConfig.Parser, new[]{ "GateConfig", "LoginConfig", "ChatConfig", "DatabaseConfig", "WebConfig", "WorldConfig" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Server), global::Server.Parser, new[]{ "ServerID", "ServerType", "ServerConfig", "Describe" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerList), global::ServerList.Parser, new[]{ "Servers" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class GateConfig : pb::IMessage<GateConfig> {
  private static readonly pb::MessageParser<GateConfig> _parser = new pb::MessageParser<GateConfig>(() => new GateConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GateConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EtcServersReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GateConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GateConfig(GateConfig other) : this() {
    port_ = other.port_;
    outOfDateTimeout_ = other.outOfDateTimeout_;
    address_ = other.address_;
    webPort_ = other.webPort_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GateConfig Clone() {
    return new GateConfig(this);
  }

  /// <summary>Field number for the "Port" field.</summary>
  public const int PortFieldNumber = 1;
  private int port_;
  /// <summary>
  /// 监听客户端连接的端口
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Port {
    get { return port_; }
    set {
      port_ = value;
    }
  }

  /// <summary>Field number for the "OutOfDateTimeout" field.</summary>
  public const int OutOfDateTimeoutFieldNumber = 2;
  private long outOfDateTimeout_;
  /// <summary>
  /// 断开连接后Session删除的Timeout
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long OutOfDateTimeout {
    get { return outOfDateTimeout_; }
    set {
      outOfDateTimeout_ = value;
    }
  }

  /// <summary>Field number for the "Address" field.</summary>
  public const int AddressFieldNumber = 3;
  private string address_ = "";
  /// <summary>
  /// IP地址 因为阿里云没有办法取得公网IP所以只能配置
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Address {
    get { return address_; }
    set {
      address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "WebPort" field.</summary>
  public const int WebPortFieldNumber = 4;
  private int webPort_;
  /// <summary>
  /// 客户端websocket端口
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int WebPort {
    get { return webPort_; }
    set {
      webPort_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GateConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GateConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Port != other.Port) return false;
    if (OutOfDateTimeout != other.OutOfDateTimeout) return false;
    if (Address != other.Address) return false;
    if (WebPort != other.WebPort) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Port != 0) hash ^= Port.GetHashCode();
    if (OutOfDateTimeout != 0L) hash ^= OutOfDateTimeout.GetHashCode();
    if (Address.Length != 0) hash ^= Address.GetHashCode();
    if (WebPort != 0) hash ^= WebPort.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Port != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Port);
    }
    if (OutOfDateTimeout != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(OutOfDateTimeout);
    }
    if (Address.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Address);
    }
    if (WebPort != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(WebPort);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Port != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
    }
    if (OutOfDateTimeout != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(OutOfDateTimeout);
    }
    if (Address.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
    }
    if (WebPort != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(WebPort);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GateConfig other) {
    if (other == null) {
      return;
    }
    if (other.Port != 0) {
      Port = other.Port;
    }
    if (other.OutOfDateTimeout != 0L) {
      OutOfDateTimeout = other.OutOfDateTimeout;
    }
    if (other.Address.Length != 0) {
      Address = other.Address;
    }
    if (other.WebPort != 0) {
      WebPort = other.WebPort;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Port = input.ReadInt32();
          break;
        }
        case 16: {
          OutOfDateTimeout = input.ReadInt64();
          break;
        }
        case 26: {
          Address = input.ReadString();
          break;
        }
        case 32: {
          WebPort = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class LoginConfig : pb::IMessage<LoginConfig> {
  private static readonly pb::MessageParser<LoginConfig> _parser = new pb::MessageParser<LoginConfig>(() => new LoginConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EtcServersReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginConfig(LoginConfig other) : this() {
    port_ = other.port_;
    database_ = other.database_ != null ? other.database_.Clone() : null;
    webPort_ = other.webPort_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginConfig Clone() {
    return new LoginConfig(this);
  }

  /// <summary>Field number for the "Port" field.</summary>
  public const int PortFieldNumber = 1;
  private int port_;
  /// <summary>
  /// 监听客户端连接的端口
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Port {
    get { return port_; }
    set {
      port_ = value;
    }
  }

  /// <summary>Field number for the "Database" field.</summary>
  public const int DatabaseFieldNumber = 2;
  private global::Database database_;
  /// <summary>
  /// 账号数据库
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Database Database {
    get { return database_; }
    set {
      database_ = value;
    }
  }

  /// <summary>Field number for the "WebPort" field.</summary>
  public const int WebPortFieldNumber = 3;
  private int webPort_;
  /// <summary>
  /// 客户端websocket端口
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int WebPort {
    get { return webPort_; }
    set {
      webPort_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Port != other.Port) return false;
    if (!object.Equals(Database, other.Database)) return false;
    if (WebPort != other.WebPort) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Port != 0) hash ^= Port.GetHashCode();
    if (database_ != null) hash ^= Database.GetHashCode();
    if (WebPort != 0) hash ^= WebPort.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Port != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Port);
    }
    if (database_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Database);
    }
    if (WebPort != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(WebPort);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Port != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
    }
    if (database_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Database);
    }
    if (WebPort != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(WebPort);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginConfig other) {
    if (other == null) {
      return;
    }
    if (other.Port != 0) {
      Port = other.Port;
    }
    if (other.database_ != null) {
      if (database_ == null) {
        Database = new global::Database();
      }
      Database.MergeFrom(other.Database);
    }
    if (other.WebPort != 0) {
      WebPort = other.WebPort;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Port = input.ReadInt32();
          break;
        }
        case 18: {
          if (database_ == null) {
            Database = new global::Database();
          }
          input.ReadMessage(Database);
          break;
        }
        case 24: {
          WebPort = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class ChatConfig : pb::IMessage<ChatConfig> {
  private static readonly pb::MessageParser<ChatConfig> _parser = new pb::MessageParser<ChatConfig>(() => new ChatConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChatConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EtcServersReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatConfig(ChatConfig other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChatConfig Clone() {
    return new ChatConfig(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChatConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChatConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChatConfig other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class DatabaseConfig : pb::IMessage<DatabaseConfig> {
  private static readonly pb::MessageParser<DatabaseConfig> _parser = new pb::MessageParser<DatabaseConfig>(() => new DatabaseConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DatabaseConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EtcServersReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatabaseConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatabaseConfig(DatabaseConfig other) : this() {
    database_ = other.database_ != null ? other.database_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatabaseConfig Clone() {
    return new DatabaseConfig(this);
  }

  /// <summary>Field number for the "Database" field.</summary>
  public const int DatabaseFieldNumber = 1;
  private global::Database database_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Database Database {
    get { return database_; }
    set {
      database_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DatabaseConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DatabaseConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Database, other.Database)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (database_ != null) hash ^= Database.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (database_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Database);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (database_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Database);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DatabaseConfig other) {
    if (other == null) {
      return;
    }
    if (other.database_ != null) {
      if (database_ == null) {
        Database = new global::Database();
      }
      Database.MergeFrom(other.Database);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (database_ == null) {
            Database = new global::Database();
          }
          input.ReadMessage(Database);
          break;
        }
      }
    }
  }

}

public sealed partial class WebConfig : pb::IMessage<WebConfig> {
  private static readonly pb::MessageParser<WebConfig> _parser = new pb::MessageParser<WebConfig>(() => new WebConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WebConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EtcServersReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WebConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WebConfig(WebConfig other) : this() {
    port_ = other.port_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WebConfig Clone() {
    return new WebConfig(this);
  }

  /// <summary>Field number for the "Port" field.</summary>
  public const int PortFieldNumber = 1;
  private int port_;
  /// <summary>
  /// 监听Http请求的端口
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Port {
    get { return port_; }
    set {
      port_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WebConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WebConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Port != other.Port) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Port != 0) hash ^= Port.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Port != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Port);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Port != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WebConfig other) {
    if (other == null) {
      return;
    }
    if (other.Port != 0) {
      Port = other.Port;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Port = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class ZoneWorld : pb::IMessage<ZoneWorld> {
  private static readonly pb::MessageParser<ZoneWorld> _parser = new pb::MessageParser<ZoneWorld>(() => new ZoneWorld());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ZoneWorld> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EtcServersReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ZoneWorld() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ZoneWorld(ZoneWorld other) : this() {
    zoneID_ = other.zoneID_;
    staticMaps_ = other.staticMaps_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ZoneWorld Clone() {
    return new ZoneWorld(this);
  }

  /// <summary>Field number for the "ZoneID" field.</summary>
  public const int ZoneIDFieldNumber = 1;
  private int zoneID_;
  /// <summary>
  /// 游戏区ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ZoneID {
    get { return zoneID_; }
    set {
      zoneID_ = value;
    }
  }

  /// <summary>Field number for the "StaticMaps" field.</summary>
  public const int StaticMapsFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_staticMaps_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> staticMaps_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 世界地图列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> StaticMaps {
    get { return staticMaps_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ZoneWorld);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ZoneWorld other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ZoneID != other.ZoneID) return false;
    if(!staticMaps_.Equals(other.staticMaps_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ZoneID != 0) hash ^= ZoneID.GetHashCode();
    hash ^= staticMaps_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ZoneID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ZoneID);
    }
    staticMaps_.WriteTo(output, _repeated_staticMaps_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ZoneID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneID);
    }
    size += staticMaps_.CalculateSize(_repeated_staticMaps_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ZoneWorld other) {
    if (other == null) {
      return;
    }
    if (other.ZoneID != 0) {
      ZoneID = other.ZoneID;
    }
    staticMaps_.Add(other.staticMaps_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ZoneID = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          staticMaps_.AddEntriesFrom(input, _repeated_staticMaps_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class WorldConfig : pb::IMessage<WorldConfig> {
  private static readonly pb::MessageParser<WorldConfig> _parser = new pb::MessageParser<WorldConfig>(() => new WorldConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WorldConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EtcServersReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldConfig(WorldConfig other) : this() {
    zones_ = other.zones_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WorldConfig Clone() {
    return new WorldConfig(this);
  }

  /// <summary>Field number for the "Zones" field.</summary>
  public const int ZonesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ZoneWorld> _repeated_zones_codec
      = pb::FieldCodec.ForMessage(10, global::ZoneWorld.Parser);
  private readonly pbc::RepeatedField<global::ZoneWorld> zones_ = new pbc::RepeatedField<global::ZoneWorld>();
  /// <summary>
  /// 游戏区配置
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ZoneWorld> Zones {
    get { return zones_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WorldConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WorldConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!zones_.Equals(other.zones_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= zones_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    zones_.WriteTo(output, _repeated_zones_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += zones_.CalculateSize(_repeated_zones_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WorldConfig other) {
    if (other == null) {
      return;
    }
    zones_.Add(other.zones_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          zones_.AddEntriesFrom(input, _repeated_zones_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ServerConfig : pb::IMessage<ServerConfig> {
  private static readonly pb::MessageParser<ServerConfig> _parser = new pb::MessageParser<ServerConfig>(() => new ServerConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EtcServersReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerConfig(ServerConfig other) : this() {
    gateConfig_ = other.gateConfig_ != null ? other.gateConfig_.Clone() : null;
    loginConfig_ = other.loginConfig_ != null ? other.loginConfig_.Clone() : null;
    chatConfig_ = other.chatConfig_ != null ? other.chatConfig_.Clone() : null;
    databaseConfig_ = other.databaseConfig_ != null ? other.databaseConfig_.Clone() : null;
    webConfig_ = other.webConfig_ != null ? other.webConfig_.Clone() : null;
    worldConfig_ = other.worldConfig_ != null ? other.worldConfig_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerConfig Clone() {
    return new ServerConfig(this);
  }

  /// <summary>Field number for the "GateConfig" field.</summary>
  public const int GateConfigFieldNumber = 1;
  private global::GateConfig gateConfig_;
  /// <summary>
  /// 门服务器配置
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GateConfig GateConfig {
    get { return gateConfig_; }
    set {
      gateConfig_ = value;
    }
  }

  /// <summary>Field number for the "LoginConfig" field.</summary>
  public const int LoginConfigFieldNumber = 2;
  private global::LoginConfig loginConfig_;
  /// <summary>
  /// 登录服务器
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LoginConfig LoginConfig {
    get { return loginConfig_; }
    set {
      loginConfig_ = value;
    }
  }

  /// <summary>Field number for the "ChatConfig" field.</summary>
  public const int ChatConfigFieldNumber = 3;
  private global::ChatConfig chatConfig_;
  /// <summary>
  /// 聊天服务器
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ChatConfig ChatConfig {
    get { return chatConfig_; }
    set {
      chatConfig_ = value;
    }
  }

  /// <summary>Field number for the "DatabaseConfig" field.</summary>
  public const int DatabaseConfigFieldNumber = 4;
  private global::DatabaseConfig databaseConfig_;
  /// <summary>
  /// 数据库服务器
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DatabaseConfig DatabaseConfig {
    get { return databaseConfig_; }
    set {
      databaseConfig_ = value;
    }
  }

  /// <summary>Field number for the "WebConfig" field.</summary>
  public const int WebConfigFieldNumber = 5;
  private global::WebConfig webConfig_;
  /// <summary>
  /// Http服务器
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::WebConfig WebConfig {
    get { return webConfig_; }
    set {
      webConfig_ = value;
    }
  }

  /// <summary>Field number for the "WorldConfig" field.</summary>
  public const int WorldConfigFieldNumber = 6;
  private global::WorldConfig worldConfig_;
  /// <summary>
  /// 世界服务器
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::WorldConfig WorldConfig {
    get { return worldConfig_; }
    set {
      worldConfig_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GateConfig, other.GateConfig)) return false;
    if (!object.Equals(LoginConfig, other.LoginConfig)) return false;
    if (!object.Equals(ChatConfig, other.ChatConfig)) return false;
    if (!object.Equals(DatabaseConfig, other.DatabaseConfig)) return false;
    if (!object.Equals(WebConfig, other.WebConfig)) return false;
    if (!object.Equals(WorldConfig, other.WorldConfig)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (gateConfig_ != null) hash ^= GateConfig.GetHashCode();
    if (loginConfig_ != null) hash ^= LoginConfig.GetHashCode();
    if (chatConfig_ != null) hash ^= ChatConfig.GetHashCode();
    if (databaseConfig_ != null) hash ^= DatabaseConfig.GetHashCode();
    if (webConfig_ != null) hash ^= WebConfig.GetHashCode();
    if (worldConfig_ != null) hash ^= WorldConfig.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (gateConfig_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GateConfig);
    }
    if (loginConfig_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(LoginConfig);
    }
    if (chatConfig_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(ChatConfig);
    }
    if (databaseConfig_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(DatabaseConfig);
    }
    if (webConfig_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(WebConfig);
    }
    if (worldConfig_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(WorldConfig);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (gateConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GateConfig);
    }
    if (loginConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginConfig);
    }
    if (chatConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatConfig);
    }
    if (databaseConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DatabaseConfig);
    }
    if (webConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(WebConfig);
    }
    if (worldConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorldConfig);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerConfig other) {
    if (other == null) {
      return;
    }
    if (other.gateConfig_ != null) {
      if (gateConfig_ == null) {
        GateConfig = new global::GateConfig();
      }
      GateConfig.MergeFrom(other.GateConfig);
    }
    if (other.loginConfig_ != null) {
      if (loginConfig_ == null) {
        LoginConfig = new global::LoginConfig();
      }
      LoginConfig.MergeFrom(other.LoginConfig);
    }
    if (other.chatConfig_ != null) {
      if (chatConfig_ == null) {
        ChatConfig = new global::ChatConfig();
      }
      ChatConfig.MergeFrom(other.ChatConfig);
    }
    if (other.databaseConfig_ != null) {
      if (databaseConfig_ == null) {
        DatabaseConfig = new global::DatabaseConfig();
      }
      DatabaseConfig.MergeFrom(other.DatabaseConfig);
    }
    if (other.webConfig_ != null) {
      if (webConfig_ == null) {
        WebConfig = new global::WebConfig();
      }
      WebConfig.MergeFrom(other.WebConfig);
    }
    if (other.worldConfig_ != null) {
      if (worldConfig_ == null) {
        WorldConfig = new global::WorldConfig();
      }
      WorldConfig.MergeFrom(other.WorldConfig);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (gateConfig_ == null) {
            GateConfig = new global::GateConfig();
          }
          input.ReadMessage(GateConfig);
          break;
        }
        case 18: {
          if (loginConfig_ == null) {
            LoginConfig = new global::LoginConfig();
          }
          input.ReadMessage(LoginConfig);
          break;
        }
        case 26: {
          if (chatConfig_ == null) {
            ChatConfig = new global::ChatConfig();
          }
          input.ReadMessage(ChatConfig);
          break;
        }
        case 34: {
          if (databaseConfig_ == null) {
            DatabaseConfig = new global::DatabaseConfig();
          }
          input.ReadMessage(DatabaseConfig);
          break;
        }
        case 42: {
          if (webConfig_ == null) {
            WebConfig = new global::WebConfig();
          }
          input.ReadMessage(WebConfig);
          break;
        }
        case 50: {
          if (worldConfig_ == null) {
            WorldConfig = new global::WorldConfig();
          }
          input.ReadMessage(WorldConfig);
          break;
        }
      }
    }
  }

}

public sealed partial class Server : pb::IMessage<Server> {
  private static readonly pb::MessageParser<Server> _parser = new pb::MessageParser<Server>(() => new Server());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Server> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EtcServersReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Server() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Server(Server other) : this() {
    serverID_ = other.serverID_;
    serverType_ = other.serverType_;
    serverConfig_ = other.serverConfig_ != null ? other.serverConfig_.Clone() : null;
    describe_ = other.describe_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Server Clone() {
    return new Server(this);
  }

  /// <summary>Field number for the "ServerID" field.</summary>
  public const int ServerIDFieldNumber = 1;
  private int serverID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ServerID {
    get { return serverID_; }
    set {
      serverID_ = value;
    }
  }

  /// <summary>Field number for the "ServerType" field.</summary>
  public const int ServerTypeFieldNumber = 2;
  private string serverType_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ServerType {
    get { return serverType_; }
    set {
      serverType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ServerConfig" field.</summary>
  public const int ServerConfigFieldNumber = 3;
  private global::ServerConfig serverConfig_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ServerConfig ServerConfig {
    get { return serverConfig_; }
    set {
      serverConfig_ = value;
    }
  }

  /// <summary>Field number for the "Describe" field.</summary>
  public const int DescribeFieldNumber = 4;
  private string describe_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Describe {
    get { return describe_; }
    set {
      describe_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Server);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Server other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ServerID != other.ServerID) return false;
    if (ServerType != other.ServerType) return false;
    if (!object.Equals(ServerConfig, other.ServerConfig)) return false;
    if (Describe != other.Describe) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ServerID != 0) hash ^= ServerID.GetHashCode();
    if (ServerType.Length != 0) hash ^= ServerType.GetHashCode();
    if (serverConfig_ != null) hash ^= ServerConfig.GetHashCode();
    if (Describe.Length != 0) hash ^= Describe.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ServerID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ServerID);
    }
    if (ServerType.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ServerType);
    }
    if (serverConfig_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(ServerConfig);
    }
    if (Describe.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Describe);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ServerID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerID);
    }
    if (ServerType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerType);
    }
    if (serverConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerConfig);
    }
    if (Describe.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Describe);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Server other) {
    if (other == null) {
      return;
    }
    if (other.ServerID != 0) {
      ServerID = other.ServerID;
    }
    if (other.ServerType.Length != 0) {
      ServerType = other.ServerType;
    }
    if (other.serverConfig_ != null) {
      if (serverConfig_ == null) {
        ServerConfig = new global::ServerConfig();
      }
      ServerConfig.MergeFrom(other.ServerConfig);
    }
    if (other.Describe.Length != 0) {
      Describe = other.Describe;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ServerID = input.ReadInt32();
          break;
        }
        case 18: {
          ServerType = input.ReadString();
          break;
        }
        case 26: {
          if (serverConfig_ == null) {
            ServerConfig = new global::ServerConfig();
          }
          input.ReadMessage(ServerConfig);
          break;
        }
        case 34: {
          Describe = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ServerList : pb::IMessage<ServerList> {
  private static readonly pb::MessageParser<ServerList> _parser = new pb::MessageParser<ServerList>(() => new ServerList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EtcServersReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerList(ServerList other) : this() {
    servers_ = other.servers_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerList Clone() {
    return new ServerList(this);
  }

  /// <summary>Field number for the "Servers" field.</summary>
  public const int ServersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Server> _repeated_servers_codec
      = pb::FieldCodec.ForMessage(10, global::Server.Parser);
  private readonly pbc::RepeatedField<global::Server> servers_ = new pbc::RepeatedField<global::Server>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Server> Servers {
    get { return servers_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!servers_.Equals(other.servers_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= servers_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    servers_.WriteTo(output, _repeated_servers_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += servers_.CalculateSize(_repeated_servers_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerList other) {
    if (other == null) {
      return;
    }
    servers_.Add(other.servers_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          servers_.AddEntriesFrom(input, _repeated_servers_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
