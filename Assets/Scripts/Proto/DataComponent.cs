// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: data.component.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from data.component.proto</summary>
public static partial class DataComponentReflection {

  #region Descriptor
  /// <summary>File descriptor for data.component.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static DataComponentReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChRkYXRhLmNvbXBvbmVudC5wcm90bxoKbWF0aC5wcm90byJPChJUcmFuc2Zv",
          "cm1Db21wb25lbnQSGgoIUG9zaXRpb24YASABKAsyCC5WZWN0b3IzEh0KCHJv",
          "dGF0aW9uGAIgASgLMgsuUXVhdGVybmlvbiJcChBQaHlzaWNzQ29tcG9uZW50",
          "EgwKBE1hc3MYASABKAESGgoIUmF3U3BlZWQYAiABKAsyCC5WZWN0b3IzEh4K",
          "DFBhc3NpdmVTcGVlZBgDIAEoCzIILlZlY3RvcjMiPgoSQXR0cmlidXRlQ29t",
          "cG9uZW50Eg0KBVNwZWVkGAEgASgCEgoKAkhQGAIgASgCEg0KBU1heEhQGAMg",
          "ASgCIi4KDU1vdmVDb21wb25lbnQSHQoLRGVzdGluYXRpb24YASABKAsyCC5W",
          "ZWN0b3IzIj4KE0NvbnRyb2xsZXJDb21wb25lbnQSJwoOQ29udHJvbGxlclR5",
          "cGUYASABKA4yDy5Db250cm9sbGVyVHlwZSJiCg9SZWJvcm5Db21wb25lbnQS",
          "EgoKUmVib3JuVGltZRgBIAEoAxIfCgpSZWJvcm5UeXBlGAIgASgOMgsuUmVi",
          "b3JuVHlwZRIaCghQb3NpdGlvbhgDIAEoCzIILlZlY3RvcjMihwIKCUNvbXBv",
          "bmVudBIcCgRUeXBlGAEgASgOMg4uQ29tcG9uZW50VHlwZRImCglUcmFuc2Zv",
          "cm0YAiABKAsyEy5UcmFuc2Zvcm1Db21wb25lbnQSIgoHUGh5c2ljcxgDIAEo",
          "CzIRLlBoeXNpY3NDb21wb25lbnQSJgoJQXR0cmlidXRlGAQgASgLMhMuQXR0",
          "cmlidXRlQ29tcG9uZW50EhwKBE1vdmUYBSABKAsyDi5Nb3ZlQ29tcG9uZW50",
          "EigKCkNvbnRyb2xsZXIYBiABKAsyFC5Db250cm9sbGVyQ29tcG9uZW50EiAK",
          "BlJlYm9ybhgHIAEoCzIQLlJlYm9ybkNvbXBvbmVudCptCg1Db21wb25lbnRU",
          "eXBlEgsKB0ludmFsaWQQABINCglUcmFuc29mcm0QARILCgdQaHlzaWNzEAIS",
          "DQoJQXR0cmlidXRlEAMSCAoETW92ZRAEEg4KCkNvbnRyb2xsZXIQBRIKCgZS",
          "ZWJvcm4QBio4Cg5Db250cm9sbGVyVHlwZRIUChBQbGF5ZXJDb250cm9sbGVy",
          "EAASEAoMQUlDb250cm9sbGVyEAEqLAoKUmVib3JuVHlwZRIICgROb25lEAAS",
          "CAoEQXV0bxABEgoKBk1hbnVhbBACQhlaF0lOU2VydmVyL3NyYy9wcm90by9k",
          "YXRhYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::MathReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ComponentType), typeof(global::ControllerType), typeof(global::RebornType), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::TransformComponent), global::TransformComponent.Parser, new[]{ "Position", "Rotation" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PhysicsComponent), global::PhysicsComponent.Parser, new[]{ "Mass", "RawSpeed", "PassiveSpeed" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AttributeComponent), global::AttributeComponent.Parser, new[]{ "Speed", "HP", "MaxHP" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MoveComponent), global::MoveComponent.Parser, new[]{ "Destination" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ControllerComponent), global::ControllerComponent.Parser, new[]{ "ControllerType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RebornComponent), global::RebornComponent.Parser, new[]{ "RebornTime", "RebornType", "Position" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Component), global::Component.Parser, new[]{ "Type", "Transform", "Physics", "Attribute", "Move", "Controller", "Reborn" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum ComponentType {
  [pbr::OriginalName("Invalid")] Invalid = 0,
  [pbr::OriginalName("Transofrm")] Transofrm = 1,
  [pbr::OriginalName("Physics")] Physics = 2,
  [pbr::OriginalName("Attribute")] Attribute = 3,
  [pbr::OriginalName("Move")] Move = 4,
  [pbr::OriginalName("Controller")] Controller = 5,
  [pbr::OriginalName("Reborn")] Reborn = 6,
}

public enum ControllerType {
  [pbr::OriginalName("PlayerController")] PlayerController = 0,
  [pbr::OriginalName("AIController")] Aicontroller = 1,
}

public enum RebornType {
  [pbr::OriginalName("None")] None = 0,
  [pbr::OriginalName("Auto")] Auto = 1,
  [pbr::OriginalName("Manual")] Manual = 2,
}

#endregion

#region Messages
public sealed partial class TransformComponent : pb::IMessage<TransformComponent> {
  private static readonly pb::MessageParser<TransformComponent> _parser = new pb::MessageParser<TransformComponent>(() => new TransformComponent());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TransformComponent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DataComponentReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TransformComponent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TransformComponent(TransformComponent other) : this() {
    position_ = other.position_ != null ? other.position_.Clone() : null;
    rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TransformComponent Clone() {
    return new TransformComponent(this);
  }

  /// <summary>Field number for the "Position" field.</summary>
  public const int PositionFieldNumber = 1;
  private global::Vector3 position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vector3 Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 2;
  private global::Quaternion rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Quaternion Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TransformComponent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TransformComponent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Position, other.Position)) return false;
    if (!object.Equals(Rotation, other.Rotation)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (position_ != null) hash ^= Position.GetHashCode();
    if (rotation_ != null) hash ^= Rotation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (position_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Position);
    }
    if (rotation_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Rotation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (rotation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TransformComponent other) {
    if (other == null) {
      return;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::Vector3();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.rotation_ != null) {
      if (rotation_ == null) {
        Rotation = new global::Quaternion();
      }
      Rotation.MergeFrom(other.Rotation);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (position_ == null) {
            Position = new global::Vector3();
          }
          input.ReadMessage(Position);
          break;
        }
        case 18: {
          if (rotation_ == null) {
            Rotation = new global::Quaternion();
          }
          input.ReadMessage(Rotation);
          break;
        }
      }
    }
  }

}

public sealed partial class PhysicsComponent : pb::IMessage<PhysicsComponent> {
  private static readonly pb::MessageParser<PhysicsComponent> _parser = new pb::MessageParser<PhysicsComponent>(() => new PhysicsComponent());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PhysicsComponent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DataComponentReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PhysicsComponent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PhysicsComponent(PhysicsComponent other) : this() {
    mass_ = other.mass_;
    rawSpeed_ = other.rawSpeed_ != null ? other.rawSpeed_.Clone() : null;
    passiveSpeed_ = other.passiveSpeed_ != null ? other.passiveSpeed_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PhysicsComponent Clone() {
    return new PhysicsComponent(this);
  }

  /// <summary>Field number for the "Mass" field.</summary>
  public const int MassFieldNumber = 1;
  private double mass_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Mass {
    get { return mass_; }
    set {
      mass_ = value;
    }
  }

  /// <summary>Field number for the "RawSpeed" field.</summary>
  public const int RawSpeedFieldNumber = 2;
  private global::Vector3 rawSpeed_;
  /// <summary>
  /// 玩家操作的移动速度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vector3 RawSpeed {
    get { return rawSpeed_; }
    set {
      rawSpeed_ = value;
    }
  }

  /// <summary>Field number for the "PassiveSpeed" field.</summary>
  public const int PassiveSpeedFieldNumber = 3;
  private global::Vector3 passiveSpeed_;
  /// <summary>
  /// 其他外力影响的速度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vector3 PassiveSpeed {
    get { return passiveSpeed_; }
    set {
      passiveSpeed_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PhysicsComponent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PhysicsComponent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mass, other.Mass)) return false;
    if (!object.Equals(RawSpeed, other.RawSpeed)) return false;
    if (!object.Equals(PassiveSpeed, other.PassiveSpeed)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Mass != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mass);
    if (rawSpeed_ != null) hash ^= RawSpeed.GetHashCode();
    if (passiveSpeed_ != null) hash ^= PassiveSpeed.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Mass != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(Mass);
    }
    if (rawSpeed_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(RawSpeed);
    }
    if (passiveSpeed_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(PassiveSpeed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Mass != 0D) {
      size += 1 + 8;
    }
    if (rawSpeed_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RawSpeed);
    }
    if (passiveSpeed_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PassiveSpeed);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PhysicsComponent other) {
    if (other == null) {
      return;
    }
    if (other.Mass != 0D) {
      Mass = other.Mass;
    }
    if (other.rawSpeed_ != null) {
      if (rawSpeed_ == null) {
        RawSpeed = new global::Vector3();
      }
      RawSpeed.MergeFrom(other.RawSpeed);
    }
    if (other.passiveSpeed_ != null) {
      if (passiveSpeed_ == null) {
        PassiveSpeed = new global::Vector3();
      }
      PassiveSpeed.MergeFrom(other.PassiveSpeed);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Mass = input.ReadDouble();
          break;
        }
        case 18: {
          if (rawSpeed_ == null) {
            RawSpeed = new global::Vector3();
          }
          input.ReadMessage(RawSpeed);
          break;
        }
        case 26: {
          if (passiveSpeed_ == null) {
            PassiveSpeed = new global::Vector3();
          }
          input.ReadMessage(PassiveSpeed);
          break;
        }
      }
    }
  }

}

public sealed partial class AttributeComponent : pb::IMessage<AttributeComponent> {
  private static readonly pb::MessageParser<AttributeComponent> _parser = new pb::MessageParser<AttributeComponent>(() => new AttributeComponent());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AttributeComponent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DataComponentReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AttributeComponent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AttributeComponent(AttributeComponent other) : this() {
    speed_ = other.speed_;
    hP_ = other.hP_;
    maxHP_ = other.maxHP_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AttributeComponent Clone() {
    return new AttributeComponent(this);
  }

  /// <summary>Field number for the "Speed" field.</summary>
  public const int SpeedFieldNumber = 1;
  private float speed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Speed {
    get { return speed_; }
    set {
      speed_ = value;
    }
  }

  /// <summary>Field number for the "HP" field.</summary>
  public const int HPFieldNumber = 2;
  private float hP_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float HP {
    get { return hP_; }
    set {
      hP_ = value;
    }
  }

  /// <summary>Field number for the "MaxHP" field.</summary>
  public const int MaxHPFieldNumber = 3;
  private float maxHP_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float MaxHP {
    get { return maxHP_; }
    set {
      maxHP_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AttributeComponent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AttributeComponent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HP, other.HP)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxHP, other.MaxHP)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Speed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
    if (HP != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HP);
    if (MaxHP != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxHP);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Speed != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(Speed);
    }
    if (HP != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(HP);
    }
    if (MaxHP != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(MaxHP);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Speed != 0F) {
      size += 1 + 4;
    }
    if (HP != 0F) {
      size += 1 + 4;
    }
    if (MaxHP != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AttributeComponent other) {
    if (other == null) {
      return;
    }
    if (other.Speed != 0F) {
      Speed = other.Speed;
    }
    if (other.HP != 0F) {
      HP = other.HP;
    }
    if (other.MaxHP != 0F) {
      MaxHP = other.MaxHP;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Speed = input.ReadFloat();
          break;
        }
        case 21: {
          HP = input.ReadFloat();
          break;
        }
        case 29: {
          MaxHP = input.ReadFloat();
          break;
        }
      }
    }
  }

}

public sealed partial class MoveComponent : pb::IMessage<MoveComponent> {
  private static readonly pb::MessageParser<MoveComponent> _parser = new pb::MessageParser<MoveComponent>(() => new MoveComponent());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MoveComponent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DataComponentReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveComponent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveComponent(MoveComponent other) : this() {
    destination_ = other.destination_ != null ? other.destination_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveComponent Clone() {
    return new MoveComponent(this);
  }

  /// <summary>Field number for the "Destination" field.</summary>
  public const int DestinationFieldNumber = 1;
  private global::Vector3 destination_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vector3 Destination {
    get { return destination_; }
    set {
      destination_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MoveComponent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MoveComponent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Destination, other.Destination)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (destination_ != null) hash ^= Destination.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (destination_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Destination);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (destination_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Destination);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MoveComponent other) {
    if (other == null) {
      return;
    }
    if (other.destination_ != null) {
      if (destination_ == null) {
        Destination = new global::Vector3();
      }
      Destination.MergeFrom(other.Destination);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (destination_ == null) {
            Destination = new global::Vector3();
          }
          input.ReadMessage(Destination);
          break;
        }
      }
    }
  }

}

public sealed partial class ControllerComponent : pb::IMessage<ControllerComponent> {
  private static readonly pb::MessageParser<ControllerComponent> _parser = new pb::MessageParser<ControllerComponent>(() => new ControllerComponent());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ControllerComponent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DataComponentReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ControllerComponent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ControllerComponent(ControllerComponent other) : this() {
    controllerType_ = other.controllerType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ControllerComponent Clone() {
    return new ControllerComponent(this);
  }

  /// <summary>Field number for the "ControllerType" field.</summary>
  public const int ControllerTypeFieldNumber = 1;
  private global::ControllerType controllerType_ = global::ControllerType.PlayerController;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ControllerType ControllerType {
    get { return controllerType_; }
    set {
      controllerType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ControllerComponent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ControllerComponent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ControllerType != other.ControllerType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ControllerType != global::ControllerType.PlayerController) hash ^= ControllerType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ControllerType != global::ControllerType.PlayerController) {
      output.WriteRawTag(8);
      output.WriteEnum((int) ControllerType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ControllerType != global::ControllerType.PlayerController) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ControllerType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ControllerComponent other) {
    if (other == null) {
      return;
    }
    if (other.ControllerType != global::ControllerType.PlayerController) {
      ControllerType = other.ControllerType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ControllerType = (global::ControllerType) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class RebornComponent : pb::IMessage<RebornComponent> {
  private static readonly pb::MessageParser<RebornComponent> _parser = new pb::MessageParser<RebornComponent>(() => new RebornComponent());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RebornComponent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DataComponentReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RebornComponent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RebornComponent(RebornComponent other) : this() {
    rebornTime_ = other.rebornTime_;
    rebornType_ = other.rebornType_;
    position_ = other.position_ != null ? other.position_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RebornComponent Clone() {
    return new RebornComponent(this);
  }

  /// <summary>Field number for the "RebornTime" field.</summary>
  public const int RebornTimeFieldNumber = 1;
  private long rebornTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long RebornTime {
    get { return rebornTime_; }
    set {
      rebornTime_ = value;
    }
  }

  /// <summary>Field number for the "RebornType" field.</summary>
  public const int RebornTypeFieldNumber = 2;
  private global::RebornType rebornType_ = global::RebornType.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RebornType RebornType {
    get { return rebornType_; }
    set {
      rebornType_ = value;
    }
  }

  /// <summary>Field number for the "Position" field.</summary>
  public const int PositionFieldNumber = 3;
  private global::Vector3 position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vector3 Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RebornComponent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RebornComponent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RebornTime != other.RebornTime) return false;
    if (RebornType != other.RebornType) return false;
    if (!object.Equals(Position, other.Position)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RebornTime != 0L) hash ^= RebornTime.GetHashCode();
    if (RebornType != global::RebornType.None) hash ^= RebornType.GetHashCode();
    if (position_ != null) hash ^= Position.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RebornTime != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(RebornTime);
    }
    if (RebornType != global::RebornType.None) {
      output.WriteRawTag(16);
      output.WriteEnum((int) RebornType);
    }
    if (position_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Position);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RebornTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(RebornTime);
    }
    if (RebornType != global::RebornType.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RebornType);
    }
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RebornComponent other) {
    if (other == null) {
      return;
    }
    if (other.RebornTime != 0L) {
      RebornTime = other.RebornTime;
    }
    if (other.RebornType != global::RebornType.None) {
      RebornType = other.RebornType;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::Vector3();
      }
      Position.MergeFrom(other.Position);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RebornTime = input.ReadInt64();
          break;
        }
        case 16: {
          RebornType = (global::RebornType) input.ReadEnum();
          break;
        }
        case 26: {
          if (position_ == null) {
            Position = new global::Vector3();
          }
          input.ReadMessage(Position);
          break;
        }
      }
    }
  }

}

public sealed partial class Component : pb::IMessage<Component> {
  private static readonly pb::MessageParser<Component> _parser = new pb::MessageParser<Component>(() => new Component());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Component> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DataComponentReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Component() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Component(Component other) : this() {
    type_ = other.type_;
    transform_ = other.transform_ != null ? other.transform_.Clone() : null;
    physics_ = other.physics_ != null ? other.physics_.Clone() : null;
    attribute_ = other.attribute_ != null ? other.attribute_.Clone() : null;
    move_ = other.move_ != null ? other.move_.Clone() : null;
    controller_ = other.controller_ != null ? other.controller_.Clone() : null;
    reborn_ = other.reborn_ != null ? other.reborn_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Component Clone() {
    return new Component(this);
  }

  /// <summary>Field number for the "Type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::ComponentType type_ = global::ComponentType.Invalid;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ComponentType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "Transform" field.</summary>
  public const int TransformFieldNumber = 2;
  private global::TransformComponent transform_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TransformComponent Transform {
    get { return transform_; }
    set {
      transform_ = value;
    }
  }

  /// <summary>Field number for the "Physics" field.</summary>
  public const int PhysicsFieldNumber = 3;
  private global::PhysicsComponent physics_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PhysicsComponent Physics {
    get { return physics_; }
    set {
      physics_ = value;
    }
  }

  /// <summary>Field number for the "Attribute" field.</summary>
  public const int AttributeFieldNumber = 4;
  private global::AttributeComponent attribute_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AttributeComponent Attribute {
    get { return attribute_; }
    set {
      attribute_ = value;
    }
  }

  /// <summary>Field number for the "Move" field.</summary>
  public const int MoveFieldNumber = 5;
  private global::MoveComponent move_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MoveComponent Move {
    get { return move_; }
    set {
      move_ = value;
    }
  }

  /// <summary>Field number for the "Controller" field.</summary>
  public const int ControllerFieldNumber = 6;
  private global::ControllerComponent controller_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ControllerComponent Controller {
    get { return controller_; }
    set {
      controller_ = value;
    }
  }

  /// <summary>Field number for the "Reborn" field.</summary>
  public const int RebornFieldNumber = 7;
  private global::RebornComponent reborn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RebornComponent Reborn {
    get { return reborn_; }
    set {
      reborn_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Component);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Component other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (!object.Equals(Transform, other.Transform)) return false;
    if (!object.Equals(Physics, other.Physics)) return false;
    if (!object.Equals(Attribute, other.Attribute)) return false;
    if (!object.Equals(Move, other.Move)) return false;
    if (!object.Equals(Controller, other.Controller)) return false;
    if (!object.Equals(Reborn, other.Reborn)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != global::ComponentType.Invalid) hash ^= Type.GetHashCode();
    if (transform_ != null) hash ^= Transform.GetHashCode();
    if (physics_ != null) hash ^= Physics.GetHashCode();
    if (attribute_ != null) hash ^= Attribute.GetHashCode();
    if (move_ != null) hash ^= Move.GetHashCode();
    if (controller_ != null) hash ^= Controller.GetHashCode();
    if (reborn_ != null) hash ^= Reborn.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != global::ComponentType.Invalid) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (transform_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Transform);
    }
    if (physics_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Physics);
    }
    if (attribute_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Attribute);
    }
    if (move_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Move);
    }
    if (controller_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Controller);
    }
    if (reborn_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Reborn);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != global::ComponentType.Invalid) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (transform_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transform);
    }
    if (physics_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Physics);
    }
    if (attribute_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attribute);
    }
    if (move_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Move);
    }
    if (controller_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Controller);
    }
    if (reborn_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reborn);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Component other) {
    if (other == null) {
      return;
    }
    if (other.Type != global::ComponentType.Invalid) {
      Type = other.Type;
    }
    if (other.transform_ != null) {
      if (transform_ == null) {
        Transform = new global::TransformComponent();
      }
      Transform.MergeFrom(other.Transform);
    }
    if (other.physics_ != null) {
      if (physics_ == null) {
        Physics = new global::PhysicsComponent();
      }
      Physics.MergeFrom(other.Physics);
    }
    if (other.attribute_ != null) {
      if (attribute_ == null) {
        Attribute = new global::AttributeComponent();
      }
      Attribute.MergeFrom(other.Attribute);
    }
    if (other.move_ != null) {
      if (move_ == null) {
        Move = new global::MoveComponent();
      }
      Move.MergeFrom(other.Move);
    }
    if (other.controller_ != null) {
      if (controller_ == null) {
        Controller = new global::ControllerComponent();
      }
      Controller.MergeFrom(other.Controller);
    }
    if (other.reborn_ != null) {
      if (reborn_ == null) {
        Reborn = new global::RebornComponent();
      }
      Reborn.MergeFrom(other.Reborn);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = (global::ComponentType) input.ReadEnum();
          break;
        }
        case 18: {
          if (transform_ == null) {
            Transform = new global::TransformComponent();
          }
          input.ReadMessage(Transform);
          break;
        }
        case 26: {
          if (physics_ == null) {
            Physics = new global::PhysicsComponent();
          }
          input.ReadMessage(Physics);
          break;
        }
        case 34: {
          if (attribute_ == null) {
            Attribute = new global::AttributeComponent();
          }
          input.ReadMessage(Attribute);
          break;
        }
        case 42: {
          if (move_ == null) {
            Move = new global::MoveComponent();
          }
          input.ReadMessage(Move);
          break;
        }
        case 50: {
          if (controller_ == null) {
            Controller = new global::ControllerComponent();
          }
          input.ReadMessage(Controller);
          break;
        }
        case 58: {
          if (reborn_ == null) {
            Reborn = new global::RebornComponent();
          }
          input.ReadMessage(Reborn);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
