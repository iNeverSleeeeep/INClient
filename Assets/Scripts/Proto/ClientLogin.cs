// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: client-login.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from client-login.proto</summary>
public static partial class ClientLoginReflection {

  #region Descriptor
  /// <summary>File descriptor for client-login.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ClientLoginReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJjbGllbnQtbG9naW4ucHJvdG8aEWNsaWVudC1nYXRlLnByb3RvGhFkYXRh",
          "LnBsYXllci5wcm90byItCgdDTExvZ29uEgwKBE5hbWUYASABKAkSFAoMUGFz",
          "c3dvcmRIYXNoGAIgASgJIi0KB0NMTG9naW4SDAoETmFtZRgBIAEoCRIUCgxQ",
          "YXNzd29yZEhhc2gYAiABKAkiUgoQQ0xDaGFuZ2VQYXNzd29yZBIMCgROYW1l",
          "GAEgASgJEhcKD09sZFBhc3N3b3JkSGFzaBgCIAEoCRIXCg9OZXdQYXNzd29y",
          "ZEhhc2gYAyABKAkiIwoPQ0xSb2xlRW50ZXJHYW1lEhAKCFJvbGVVVUlEGAEg",
          "ASgJIi4KDENMQ3JlYXRlUm9sZRIQCghSb2xlTmFtZRgBIAEoCRIMCgRab25l",
          "GAIgASgFIrQBCg1DbGllbnRUb0xvZ2luEhcKBUxvZ29uGAEgASgLMgguQ0xM",
          "b2dvbhIXCgVMb2dpbhgCIAEoCzIILkNMTG9naW4SKQoOQ2hhbmdlUGFzc3dv",
          "cmQYAyABKAsyES5DTENoYW5nZVBhc3N3b3JkEiEKCkNyZWF0ZVJvbGUYBCAB",
          "KAsyDS5DTENyZWF0ZVJvbGUSIwoJRW50ZXJHYW1lGAUgASgLMhAuQ0xSb2xl",
          "RW50ZXJHYW1lIpMBCg1Mb2dpblRvQ2xpZW50Eg8KB1N1Y2Nlc3MYASABKAgS",
          "IQoLU2Vzc2lvbkNlcnQYAiABKAsyDC5TZXNzaW9uQ2VydBIOCgZHYXRlSVAY",
          "AyABKAkSEAoIR2F0ZVBvcnQYBCABKAUSEwoLR2F0ZVdlYlBvcnQYBSABKAUS",
          "FwoGUGxheWVyGAYgASgLMgcuUGxheWVyQhhaFklOU2VydmVyL3NyYy9wcm90",
          "by9tc2diBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::ClientGateReflection.Descriptor, global::DataPlayerReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CLLogon), global::CLLogon.Parser, new[]{ "Name", "PasswordHash" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CLLogin), global::CLLogin.Parser, new[]{ "Name", "PasswordHash" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CLChangePassword), global::CLChangePassword.Parser, new[]{ "Name", "OldPasswordHash", "NewPasswordHash" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CLRoleEnterGame), global::CLRoleEnterGame.Parser, new[]{ "RoleUUID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CLCreateRole), global::CLCreateRole.Parser, new[]{ "RoleName", "Zone" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientToLogin), global::ClientToLogin.Parser, new[]{ "Logon", "Login", "ChangePassword", "CreateRole", "EnterGame" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginToClient), global::LoginToClient.Parser, new[]{ "Success", "SessionCert", "GateIP", "GatePort", "GateWebPort", "Player" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CLLogon : pb::IMessage<CLLogon> {
  private static readonly pb::MessageParser<CLLogon> _parser = new pb::MessageParser<CLLogon>(() => new CLLogon());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CLLogon> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientLoginReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLLogon() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLLogon(CLLogon other) : this() {
    name_ = other.name_;
    passwordHash_ = other.passwordHash_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLLogon Clone() {
    return new CLLogon(this);
  }

  /// <summary>Field number for the "Name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "PasswordHash" field.</summary>
  public const int PasswordHashFieldNumber = 2;
  private string passwordHash_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PasswordHash {
    get { return passwordHash_; }
    set {
      passwordHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CLLogon);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CLLogon other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (PasswordHash != other.PasswordHash) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (PasswordHash.Length != 0) hash ^= PasswordHash.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (PasswordHash.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PasswordHash);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (PasswordHash.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PasswordHash);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CLLogon other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.PasswordHash.Length != 0) {
      PasswordHash = other.PasswordHash;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          PasswordHash = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CLLogin : pb::IMessage<CLLogin> {
  private static readonly pb::MessageParser<CLLogin> _parser = new pb::MessageParser<CLLogin>(() => new CLLogin());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CLLogin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientLoginReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLLogin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLLogin(CLLogin other) : this() {
    name_ = other.name_;
    passwordHash_ = other.passwordHash_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLLogin Clone() {
    return new CLLogin(this);
  }

  /// <summary>Field number for the "Name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "PasswordHash" field.</summary>
  public const int PasswordHashFieldNumber = 2;
  private string passwordHash_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PasswordHash {
    get { return passwordHash_; }
    set {
      passwordHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CLLogin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CLLogin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (PasswordHash != other.PasswordHash) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (PasswordHash.Length != 0) hash ^= PasswordHash.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (PasswordHash.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PasswordHash);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (PasswordHash.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PasswordHash);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CLLogin other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.PasswordHash.Length != 0) {
      PasswordHash = other.PasswordHash;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          PasswordHash = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CLChangePassword : pb::IMessage<CLChangePassword> {
  private static readonly pb::MessageParser<CLChangePassword> _parser = new pb::MessageParser<CLChangePassword>(() => new CLChangePassword());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CLChangePassword> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientLoginReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLChangePassword() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLChangePassword(CLChangePassword other) : this() {
    name_ = other.name_;
    oldPasswordHash_ = other.oldPasswordHash_;
    newPasswordHash_ = other.newPasswordHash_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLChangePassword Clone() {
    return new CLChangePassword(this);
  }

  /// <summary>Field number for the "Name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "OldPasswordHash" field.</summary>
  public const int OldPasswordHashFieldNumber = 2;
  private string oldPasswordHash_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string OldPasswordHash {
    get { return oldPasswordHash_; }
    set {
      oldPasswordHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "NewPasswordHash" field.</summary>
  public const int NewPasswordHashFieldNumber = 3;
  private string newPasswordHash_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NewPasswordHash {
    get { return newPasswordHash_; }
    set {
      newPasswordHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CLChangePassword);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CLChangePassword other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (OldPasswordHash != other.OldPasswordHash) return false;
    if (NewPasswordHash != other.NewPasswordHash) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (OldPasswordHash.Length != 0) hash ^= OldPasswordHash.GetHashCode();
    if (NewPasswordHash.Length != 0) hash ^= NewPasswordHash.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (OldPasswordHash.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(OldPasswordHash);
    }
    if (NewPasswordHash.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(NewPasswordHash);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (OldPasswordHash.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OldPasswordHash);
    }
    if (NewPasswordHash.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPasswordHash);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CLChangePassword other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.OldPasswordHash.Length != 0) {
      OldPasswordHash = other.OldPasswordHash;
    }
    if (other.NewPasswordHash.Length != 0) {
      NewPasswordHash = other.NewPasswordHash;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          OldPasswordHash = input.ReadString();
          break;
        }
        case 26: {
          NewPasswordHash = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CLRoleEnterGame : pb::IMessage<CLRoleEnterGame> {
  private static readonly pb::MessageParser<CLRoleEnterGame> _parser = new pb::MessageParser<CLRoleEnterGame>(() => new CLRoleEnterGame());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CLRoleEnterGame> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientLoginReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLRoleEnterGame() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLRoleEnterGame(CLRoleEnterGame other) : this() {
    roleUUID_ = other.roleUUID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLRoleEnterGame Clone() {
    return new CLRoleEnterGame(this);
  }

  /// <summary>Field number for the "RoleUUID" field.</summary>
  public const int RoleUUIDFieldNumber = 1;
  private string roleUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoleUUID {
    get { return roleUUID_; }
    set {
      roleUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CLRoleEnterGame);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CLRoleEnterGame other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoleUUID != other.RoleUUID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoleUUID.Length != 0) hash ^= RoleUUID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoleUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RoleUUID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoleUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleUUID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CLRoleEnterGame other) {
    if (other == null) {
      return;
    }
    if (other.RoleUUID.Length != 0) {
      RoleUUID = other.RoleUUID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RoleUUID = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CLCreateRole : pb::IMessage<CLCreateRole> {
  private static readonly pb::MessageParser<CLCreateRole> _parser = new pb::MessageParser<CLCreateRole>(() => new CLCreateRole());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CLCreateRole> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientLoginReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLCreateRole() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLCreateRole(CLCreateRole other) : this() {
    roleName_ = other.roleName_;
    zone_ = other.zone_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CLCreateRole Clone() {
    return new CLCreateRole(this);
  }

  /// <summary>Field number for the "RoleName" field.</summary>
  public const int RoleNameFieldNumber = 1;
  private string roleName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoleName {
    get { return roleName_; }
    set {
      roleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Zone" field.</summary>
  public const int ZoneFieldNumber = 2;
  private int zone_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Zone {
    get { return zone_; }
    set {
      zone_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CLCreateRole);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CLCreateRole other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoleName != other.RoleName) return false;
    if (Zone != other.Zone) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoleName.Length != 0) hash ^= RoleName.GetHashCode();
    if (Zone != 0) hash ^= Zone.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoleName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RoleName);
    }
    if (Zone != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Zone);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoleName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleName);
    }
    if (Zone != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Zone);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CLCreateRole other) {
    if (other == null) {
      return;
    }
    if (other.RoleName.Length != 0) {
      RoleName = other.RoleName;
    }
    if (other.Zone != 0) {
      Zone = other.Zone;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RoleName = input.ReadString();
          break;
        }
        case 16: {
          Zone = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class ClientToLogin : pb::IMessage<ClientToLogin> {
  private static readonly pb::MessageParser<ClientToLogin> _parser = new pb::MessageParser<ClientToLogin>(() => new ClientToLogin());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientToLogin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientLoginReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientToLogin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientToLogin(ClientToLogin other) : this() {
    logon_ = other.logon_ != null ? other.logon_.Clone() : null;
    login_ = other.login_ != null ? other.login_.Clone() : null;
    changePassword_ = other.changePassword_ != null ? other.changePassword_.Clone() : null;
    createRole_ = other.createRole_ != null ? other.createRole_.Clone() : null;
    enterGame_ = other.enterGame_ != null ? other.enterGame_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientToLogin Clone() {
    return new ClientToLogin(this);
  }

  /// <summary>Field number for the "Logon" field.</summary>
  public const int LogonFieldNumber = 1;
  private global::CLLogon logon_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CLLogon Logon {
    get { return logon_; }
    set {
      logon_ = value;
    }
  }

  /// <summary>Field number for the "Login" field.</summary>
  public const int LoginFieldNumber = 2;
  private global::CLLogin login_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CLLogin Login {
    get { return login_; }
    set {
      login_ = value;
    }
  }

  /// <summary>Field number for the "ChangePassword" field.</summary>
  public const int ChangePasswordFieldNumber = 3;
  private global::CLChangePassword changePassword_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CLChangePassword ChangePassword {
    get { return changePassword_; }
    set {
      changePassword_ = value;
    }
  }

  /// <summary>Field number for the "CreateRole" field.</summary>
  public const int CreateRoleFieldNumber = 4;
  private global::CLCreateRole createRole_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CLCreateRole CreateRole {
    get { return createRole_; }
    set {
      createRole_ = value;
    }
  }

  /// <summary>Field number for the "EnterGame" field.</summary>
  public const int EnterGameFieldNumber = 5;
  private global::CLRoleEnterGame enterGame_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CLRoleEnterGame EnterGame {
    get { return enterGame_; }
    set {
      enterGame_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientToLogin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientToLogin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Logon, other.Logon)) return false;
    if (!object.Equals(Login, other.Login)) return false;
    if (!object.Equals(ChangePassword, other.ChangePassword)) return false;
    if (!object.Equals(CreateRole, other.CreateRole)) return false;
    if (!object.Equals(EnterGame, other.EnterGame)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (logon_ != null) hash ^= Logon.GetHashCode();
    if (login_ != null) hash ^= Login.GetHashCode();
    if (changePassword_ != null) hash ^= ChangePassword.GetHashCode();
    if (createRole_ != null) hash ^= CreateRole.GetHashCode();
    if (enterGame_ != null) hash ^= EnterGame.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (logon_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Logon);
    }
    if (login_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Login);
    }
    if (changePassword_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(ChangePassword);
    }
    if (createRole_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(CreateRole);
    }
    if (enterGame_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(EnterGame);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (logon_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Logon);
    }
    if (login_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Login);
    }
    if (changePassword_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChangePassword);
    }
    if (createRole_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateRole);
    }
    if (enterGame_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnterGame);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientToLogin other) {
    if (other == null) {
      return;
    }
    if (other.logon_ != null) {
      if (logon_ == null) {
        Logon = new global::CLLogon();
      }
      Logon.MergeFrom(other.Logon);
    }
    if (other.login_ != null) {
      if (login_ == null) {
        Login = new global::CLLogin();
      }
      Login.MergeFrom(other.Login);
    }
    if (other.changePassword_ != null) {
      if (changePassword_ == null) {
        ChangePassword = new global::CLChangePassword();
      }
      ChangePassword.MergeFrom(other.ChangePassword);
    }
    if (other.createRole_ != null) {
      if (createRole_ == null) {
        CreateRole = new global::CLCreateRole();
      }
      CreateRole.MergeFrom(other.CreateRole);
    }
    if (other.enterGame_ != null) {
      if (enterGame_ == null) {
        EnterGame = new global::CLRoleEnterGame();
      }
      EnterGame.MergeFrom(other.EnterGame);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (logon_ == null) {
            Logon = new global::CLLogon();
          }
          input.ReadMessage(Logon);
          break;
        }
        case 18: {
          if (login_ == null) {
            Login = new global::CLLogin();
          }
          input.ReadMessage(Login);
          break;
        }
        case 26: {
          if (changePassword_ == null) {
            ChangePassword = new global::CLChangePassword();
          }
          input.ReadMessage(ChangePassword);
          break;
        }
        case 34: {
          if (createRole_ == null) {
            CreateRole = new global::CLCreateRole();
          }
          input.ReadMessage(CreateRole);
          break;
        }
        case 42: {
          if (enterGame_ == null) {
            EnterGame = new global::CLRoleEnterGame();
          }
          input.ReadMessage(EnterGame);
          break;
        }
      }
    }
  }

}

public sealed partial class LoginToClient : pb::IMessage<LoginToClient> {
  private static readonly pb::MessageParser<LoginToClient> _parser = new pb::MessageParser<LoginToClient>(() => new LoginToClient());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginToClient> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientLoginReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginToClient() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginToClient(LoginToClient other) : this() {
    success_ = other.success_;
    sessionCert_ = other.sessionCert_ != null ? other.sessionCert_.Clone() : null;
    gateIP_ = other.gateIP_;
    gatePort_ = other.gatePort_;
    gateWebPort_ = other.gateWebPort_;
    player_ = other.player_ != null ? other.player_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginToClient Clone() {
    return new LoginToClient(this);
  }

  /// <summary>Field number for the "Success" field.</summary>
  public const int SuccessFieldNumber = 1;
  private bool success_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Success {
    get { return success_; }
    set {
      success_ = value;
    }
  }

  /// <summary>Field number for the "SessionCert" field.</summary>
  public const int SessionCertFieldNumber = 2;
  private global::SessionCert sessionCert_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SessionCert SessionCert {
    get { return sessionCert_; }
    set {
      sessionCert_ = value;
    }
  }

  /// <summary>Field number for the "GateIP" field.</summary>
  public const int GateIPFieldNumber = 3;
  private string gateIP_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GateIP {
    get { return gateIP_; }
    set {
      gateIP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "GatePort" field.</summary>
  public const int GatePortFieldNumber = 4;
  private int gatePort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GatePort {
    get { return gatePort_; }
    set {
      gatePort_ = value;
    }
  }

  /// <summary>Field number for the "GateWebPort" field.</summary>
  public const int GateWebPortFieldNumber = 5;
  private int gateWebPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GateWebPort {
    get { return gateWebPort_; }
    set {
      gateWebPort_ = value;
    }
  }

  /// <summary>Field number for the "Player" field.</summary>
  public const int PlayerFieldNumber = 6;
  private global::Player player_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Player Player {
    get { return player_; }
    set {
      player_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginToClient);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginToClient other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Success != other.Success) return false;
    if (!object.Equals(SessionCert, other.SessionCert)) return false;
    if (GateIP != other.GateIP) return false;
    if (GatePort != other.GatePort) return false;
    if (GateWebPort != other.GateWebPort) return false;
    if (!object.Equals(Player, other.Player)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Success != false) hash ^= Success.GetHashCode();
    if (sessionCert_ != null) hash ^= SessionCert.GetHashCode();
    if (GateIP.Length != 0) hash ^= GateIP.GetHashCode();
    if (GatePort != 0) hash ^= GatePort.GetHashCode();
    if (GateWebPort != 0) hash ^= GateWebPort.GetHashCode();
    if (player_ != null) hash ^= Player.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Success != false) {
      output.WriteRawTag(8);
      output.WriteBool(Success);
    }
    if (sessionCert_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(SessionCert);
    }
    if (GateIP.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(GateIP);
    }
    if (GatePort != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(GatePort);
    }
    if (GateWebPort != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(GateWebPort);
    }
    if (player_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Player);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Success != false) {
      size += 1 + 1;
    }
    if (sessionCert_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionCert);
    }
    if (GateIP.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GateIP);
    }
    if (GatePort != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GatePort);
    }
    if (GateWebPort != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GateWebPort);
    }
    if (player_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginToClient other) {
    if (other == null) {
      return;
    }
    if (other.Success != false) {
      Success = other.Success;
    }
    if (other.sessionCert_ != null) {
      if (sessionCert_ == null) {
        SessionCert = new global::SessionCert();
      }
      SessionCert.MergeFrom(other.SessionCert);
    }
    if (other.GateIP.Length != 0) {
      GateIP = other.GateIP;
    }
    if (other.GatePort != 0) {
      GatePort = other.GatePort;
    }
    if (other.GateWebPort != 0) {
      GateWebPort = other.GateWebPort;
    }
    if (other.player_ != null) {
      if (player_ == null) {
        Player = new global::Player();
      }
      Player.MergeFrom(other.Player);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Success = input.ReadBool();
          break;
        }
        case 18: {
          if (sessionCert_ == null) {
            SessionCert = new global::SessionCert();
          }
          input.ReadMessage(SessionCert);
          break;
        }
        case 26: {
          GateIP = input.ReadString();
          break;
        }
        case 32: {
          GatePort = input.ReadInt32();
          break;
        }
        case 40: {
          GateWebPort = input.ReadInt32();
          break;
        }
        case 50: {
          if (player_ == null) {
            Player = new global::Player();
          }
          input.ReadMessage(Player);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
