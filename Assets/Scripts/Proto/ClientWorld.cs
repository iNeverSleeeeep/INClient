// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: client-world.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from client-world.proto</summary>
public static partial class ClientWorldReflection {

  #region Descriptor
  /// <summary>File descriptor for client-world.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ClientWorldReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJjbGllbnQtd29ybGQucHJvdG8aCm1hdGgucHJvdG8aDGVudGl0eS5wcm90",
          "byI7CgdNb3ZlSU5GEhoKCFBvc2l0aW9uGAEgASgLMgguVmVjdG9yMxIUCgJU",
          "bxgCIAEoCzIILlZlY3RvcjMiMwoHTW92ZU5URhISCgpFbnRpdHlVVUlEGAEg",
          "ASgJEhQKAlRvGAIgASgLMgguVmVjdG9yMyI8CgpOZWFyRW50aXR5EhIKCkVu",
          "dGl0eVVVSUQYASABKAkSGgoIUG9zaXRpb24YAiABKAsyCC5WZWN0b3IzIjAK",
          "D05lYXJFbnRpdGllc05URhIdCghFbnRpdGllcxgBIAMoCzILLk5lYXJFbnRp",
          "dHkiJAoNRW50aXR5RGF0YVJlcRITCgtFbnRpdHlVVUlEcxgBIAMoCSIuCg1F",
          "bnRpdHlEYXRhUmVzEh0KCEVudGl0aWVzGAEgAygLMgsuRW50aXR5RGF0YUIY",
          "WhZJTlNlcnZlci9zcmMvcHJvdG8vbXNnYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::MathReflection.Descriptor, global::EntityReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MoveINF), global::MoveINF.Parser, new[]{ "Position", "To" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MoveNTF), global::MoveNTF.Parser, new[]{ "EntityUUID", "To" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::NearEntity), global::NearEntity.Parser, new[]{ "EntityUUID", "Position" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::NearEntitiesNTF), global::NearEntitiesNTF.Parser, new[]{ "Entities" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EntityDataReq), global::EntityDataReq.Parser, new[]{ "EntityUUIDs" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EntityDataRes), global::EntityDataRes.Parser, new[]{ "Entities" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class MoveINF : pb::IMessage<MoveINF> {
  private static readonly pb::MessageParser<MoveINF> _parser = new pb::MessageParser<MoveINF>(() => new MoveINF());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MoveINF> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientWorldReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveINF() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveINF(MoveINF other) : this() {
    position_ = other.position_ != null ? other.position_.Clone() : null;
    to_ = other.to_ != null ? other.to_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveINF Clone() {
    return new MoveINF(this);
  }

  /// <summary>Field number for the "Position" field.</summary>
  public const int PositionFieldNumber = 1;
  private global::Vector3 position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vector3 Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "To" field.</summary>
  public const int ToFieldNumber = 2;
  private global::Vector3 to_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vector3 To {
    get { return to_; }
    set {
      to_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MoveINF);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MoveINF other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Position, other.Position)) return false;
    if (!object.Equals(To, other.To)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (position_ != null) hash ^= Position.GetHashCode();
    if (to_ != null) hash ^= To.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (position_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Position);
    }
    if (to_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(To);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (to_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MoveINF other) {
    if (other == null) {
      return;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::Vector3();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.to_ != null) {
      if (to_ == null) {
        To = new global::Vector3();
      }
      To.MergeFrom(other.To);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (position_ == null) {
            Position = new global::Vector3();
          }
          input.ReadMessage(Position);
          break;
        }
        case 18: {
          if (to_ == null) {
            To = new global::Vector3();
          }
          input.ReadMessage(To);
          break;
        }
      }
    }
  }

}

public sealed partial class MoveNTF : pb::IMessage<MoveNTF> {
  private static readonly pb::MessageParser<MoveNTF> _parser = new pb::MessageParser<MoveNTF>(() => new MoveNTF());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MoveNTF> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientWorldReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveNTF() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveNTF(MoveNTF other) : this() {
    entityUUID_ = other.entityUUID_;
    to_ = other.to_ != null ? other.to_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveNTF Clone() {
    return new MoveNTF(this);
  }

  /// <summary>Field number for the "EntityUUID" field.</summary>
  public const int EntityUUIDFieldNumber = 1;
  private string entityUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EntityUUID {
    get { return entityUUID_; }
    set {
      entityUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "To" field.</summary>
  public const int ToFieldNumber = 2;
  private global::Vector3 to_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vector3 To {
    get { return to_; }
    set {
      to_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MoveNTF);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MoveNTF other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EntityUUID != other.EntityUUID) return false;
    if (!object.Equals(To, other.To)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EntityUUID.Length != 0) hash ^= EntityUUID.GetHashCode();
    if (to_ != null) hash ^= To.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (EntityUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(EntityUUID);
    }
    if (to_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(To);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EntityUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityUUID);
    }
    if (to_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MoveNTF other) {
    if (other == null) {
      return;
    }
    if (other.EntityUUID.Length != 0) {
      EntityUUID = other.EntityUUID;
    }
    if (other.to_ != null) {
      if (to_ == null) {
        To = new global::Vector3();
      }
      To.MergeFrom(other.To);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          EntityUUID = input.ReadString();
          break;
        }
        case 18: {
          if (to_ == null) {
            To = new global::Vector3();
          }
          input.ReadMessage(To);
          break;
        }
      }
    }
  }

}

public sealed partial class NearEntity : pb::IMessage<NearEntity> {
  private static readonly pb::MessageParser<NearEntity> _parser = new pb::MessageParser<NearEntity>(() => new NearEntity());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<NearEntity> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientWorldReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NearEntity() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NearEntity(NearEntity other) : this() {
    entityUUID_ = other.entityUUID_;
    position_ = other.position_ != null ? other.position_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NearEntity Clone() {
    return new NearEntity(this);
  }

  /// <summary>Field number for the "EntityUUID" field.</summary>
  public const int EntityUUIDFieldNumber = 1;
  private string entityUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EntityUUID {
    get { return entityUUID_; }
    set {
      entityUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Position" field.</summary>
  public const int PositionFieldNumber = 2;
  private global::Vector3 position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vector3 Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as NearEntity);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(NearEntity other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EntityUUID != other.EntityUUID) return false;
    if (!object.Equals(Position, other.Position)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EntityUUID.Length != 0) hash ^= EntityUUID.GetHashCode();
    if (position_ != null) hash ^= Position.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (EntityUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(EntityUUID);
    }
    if (position_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Position);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EntityUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityUUID);
    }
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(NearEntity other) {
    if (other == null) {
      return;
    }
    if (other.EntityUUID.Length != 0) {
      EntityUUID = other.EntityUUID;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::Vector3();
      }
      Position.MergeFrom(other.Position);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          EntityUUID = input.ReadString();
          break;
        }
        case 18: {
          if (position_ == null) {
            Position = new global::Vector3();
          }
          input.ReadMessage(Position);
          break;
        }
      }
    }
  }

}

public sealed partial class NearEntitiesNTF : pb::IMessage<NearEntitiesNTF> {
  private static readonly pb::MessageParser<NearEntitiesNTF> _parser = new pb::MessageParser<NearEntitiesNTF>(() => new NearEntitiesNTF());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<NearEntitiesNTF> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientWorldReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NearEntitiesNTF() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NearEntitiesNTF(NearEntitiesNTF other) : this() {
    entities_ = other.entities_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NearEntitiesNTF Clone() {
    return new NearEntitiesNTF(this);
  }

  /// <summary>Field number for the "Entities" field.</summary>
  public const int EntitiesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::NearEntity> _repeated_entities_codec
      = pb::FieldCodec.ForMessage(10, global::NearEntity.Parser);
  private readonly pbc::RepeatedField<global::NearEntity> entities_ = new pbc::RepeatedField<global::NearEntity>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::NearEntity> Entities {
    get { return entities_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as NearEntitiesNTF);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(NearEntitiesNTF other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!entities_.Equals(other.entities_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= entities_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    entities_.WriteTo(output, _repeated_entities_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += entities_.CalculateSize(_repeated_entities_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(NearEntitiesNTF other) {
    if (other == null) {
      return;
    }
    entities_.Add(other.entities_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          entities_.AddEntriesFrom(input, _repeated_entities_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class EntityDataReq : pb::IMessage<EntityDataReq> {
  private static readonly pb::MessageParser<EntityDataReq> _parser = new pb::MessageParser<EntityDataReq>(() => new EntityDataReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EntityDataReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientWorldReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityDataReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityDataReq(EntityDataReq other) : this() {
    entityUUIDs_ = other.entityUUIDs_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityDataReq Clone() {
    return new EntityDataReq(this);
  }

  /// <summary>Field number for the "EntityUUIDs" field.</summary>
  public const int EntityUUIDsFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_entityUUIDs_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> entityUUIDs_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> EntityUUIDs {
    get { return entityUUIDs_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EntityDataReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EntityDataReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!entityUUIDs_.Equals(other.entityUUIDs_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= entityUUIDs_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    entityUUIDs_.WriteTo(output, _repeated_entityUUIDs_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += entityUUIDs_.CalculateSize(_repeated_entityUUIDs_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EntityDataReq other) {
    if (other == null) {
      return;
    }
    entityUUIDs_.Add(other.entityUUIDs_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          entityUUIDs_.AddEntriesFrom(input, _repeated_entityUUIDs_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class EntityDataRes : pb::IMessage<EntityDataRes> {
  private static readonly pb::MessageParser<EntityDataRes> _parser = new pb::MessageParser<EntityDataRes>(() => new EntityDataRes());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EntityDataRes> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientWorldReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityDataRes() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityDataRes(EntityDataRes other) : this() {
    entities_ = other.entities_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityDataRes Clone() {
    return new EntityDataRes(this);
  }

  /// <summary>Field number for the "Entities" field.</summary>
  public const int EntitiesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::EntityData> _repeated_entities_codec
      = pb::FieldCodec.ForMessage(10, global::EntityData.Parser);
  private readonly pbc::RepeatedField<global::EntityData> entities_ = new pbc::RepeatedField<global::EntityData>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::EntityData> Entities {
    get { return entities_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EntityDataRes);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EntityDataRes other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!entities_.Equals(other.entities_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= entities_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    entities_.WriteTo(output, _repeated_entities_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += entities_.CalculateSize(_repeated_entities_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EntityDataRes other) {
    if (other == null) {
      return;
    }
    entities_.Add(other.entities_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          entities_.AddEntriesFrom(input, _repeated_entities_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
