// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: world-database.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from world-database.proto</summary>
public static partial class WorldDatabaseReflection {

  #region Descriptor
  /// <summary>File descriptor for world-database.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static WorldDatabaseReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChR3b3JsZC1kYXRhYmFzZS5wcm90bxoJbWFwLnByb3RvIjcKEExvYWRTdGF0",
          "aWNNYXBSZXESDgoGWm9uZUlEGAEgASgFEhMKC1N0YXRpY01hcElEGAIgASgF",
          "IioKEUxvYWRTdGF0aWNNYXBSZXNwEhUKA01hcBgBIAEoCzIILk1hcERhdGFC",
          "GFoWSU5TZXJ2ZXIvc3JjL3Byb3RvL21zZ2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::MapReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::LoadStaticMapReq), global::LoadStaticMapReq.Parser, new[]{ "ZoneID", "StaticMapID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LoadStaticMapResp), global::LoadStaticMapResp.Parser, new[]{ "Map" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class LoadStaticMapReq : pb::IMessage<LoadStaticMapReq> {
  private static readonly pb::MessageParser<LoadStaticMapReq> _parser = new pb::MessageParser<LoadStaticMapReq>(() => new LoadStaticMapReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoadStaticMapReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WorldDatabaseReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadStaticMapReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadStaticMapReq(LoadStaticMapReq other) : this() {
    zoneID_ = other.zoneID_;
    staticMapID_ = other.staticMapID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadStaticMapReq Clone() {
    return new LoadStaticMapReq(this);
  }

  /// <summary>Field number for the "ZoneID" field.</summary>
  public const int ZoneIDFieldNumber = 1;
  private int zoneID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ZoneID {
    get { return zoneID_; }
    set {
      zoneID_ = value;
    }
  }

  /// <summary>Field number for the "StaticMapID" field.</summary>
  public const int StaticMapIDFieldNumber = 2;
  private int staticMapID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StaticMapID {
    get { return staticMapID_; }
    set {
      staticMapID_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoadStaticMapReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoadStaticMapReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ZoneID != other.ZoneID) return false;
    if (StaticMapID != other.StaticMapID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ZoneID != 0) hash ^= ZoneID.GetHashCode();
    if (StaticMapID != 0) hash ^= StaticMapID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ZoneID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ZoneID);
    }
    if (StaticMapID != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(StaticMapID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ZoneID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneID);
    }
    if (StaticMapID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StaticMapID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoadStaticMapReq other) {
    if (other == null) {
      return;
    }
    if (other.ZoneID != 0) {
      ZoneID = other.ZoneID;
    }
    if (other.StaticMapID != 0) {
      StaticMapID = other.StaticMapID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ZoneID = input.ReadInt32();
          break;
        }
        case 16: {
          StaticMapID = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class LoadStaticMapResp : pb::IMessage<LoadStaticMapResp> {
  private static readonly pb::MessageParser<LoadStaticMapResp> _parser = new pb::MessageParser<LoadStaticMapResp>(() => new LoadStaticMapResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoadStaticMapResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WorldDatabaseReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadStaticMapResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadStaticMapResp(LoadStaticMapResp other) : this() {
    map_ = other.map_ != null ? other.map_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadStaticMapResp Clone() {
    return new LoadStaticMapResp(this);
  }

  /// <summary>Field number for the "Map" field.</summary>
  public const int MapFieldNumber = 1;
  private global::MapData map_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MapData Map {
    get { return map_; }
    set {
      map_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoadStaticMapResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoadStaticMapResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Map, other.Map)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (map_ != null) hash ^= Map.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (map_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Map);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (map_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Map);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoadStaticMapResp other) {
    if (other == null) {
      return;
    }
    if (other.map_ != null) {
      if (map_ == null) {
        Map = new global::MapData();
      }
      Map.MergeFrom(other.Map);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (map_ == null) {
            Map = new global::MapData();
          }
          input.ReadMessage(Map);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
