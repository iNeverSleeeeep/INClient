// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gps.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from gps.proto</summary>
public static partial class GpsReflection {

  #region Descriptor
  /// <summary>File descriptor for gps.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GpsReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CglncHMucHJvdG8aD2RhdGEucm9sZS5wcm90byJHChRVcGRhdGVSb2xlQWRk",
          "cmVzc05URhIQCghSb2xlVVVJRBgBIAEoCRIdCgdBZGRyZXNzGAIgASgLMgwu",
          "Um9sZUFkZHJlc3MiKAoUUmVtb3ZlUm9sZUFkZHJlc3NOVEYSEAoIUm9sZVVV",
          "SUQYASABKAkiOAoTVXBkYXRlTWFwQWRkcmVzc05URhIPCgdNYXBVVUlEGAEg",
          "ASgJEhAKCFNlcnZlcklEGAIgASgFIiYKE1JlbW92ZU1hcEFkZHJlc3NOVEYS",
          "DwoHTWFwVVVJRBgBIAEoCSIjChBHZXRNYXBBZGRyZXNzUmVxEg8KB01hcFVV",
          "SUQYASABKAkiJQoRR2V0TWFwQWRkcmVzc1Jlc3ASEAoIU2VydmVySUQYASAB",
          "KAUiVAoWVXBkYXRlU3RhdGljTWFwVVVJRE5URhIOCgZab25lSUQYASABKAUS",
          "EwoLU3RhdGljTWFwSUQYAiABKAUSFQoNU3RhdGljTWFwVVVJRBgDIAEoCSI6",
          "ChNHZXRTdGF0aWNNYXBVVUlEUmVxEg4KBlpvbmVJRBgBIAEoBRITCgtTdGF0",
          "aWNNYXBJRBgCIAEoBSItChRHZXRTdGF0aWNNYXBVVUlEUmVzcBIVCg1TdGF0",
          "aWNNYXBVVUlEGAEgASgJQhhaFklOU2VydmVyL3NyYy9wcm90by9tc2diBnBy",
          "b3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::DataRoleReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateRoleAddressNTF), global::UpdateRoleAddressNTF.Parser, new[]{ "RoleUUID", "Address" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RemoveRoleAddressNTF), global::RemoveRoleAddressNTF.Parser, new[]{ "RoleUUID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateMapAddressNTF), global::UpdateMapAddressNTF.Parser, new[]{ "MapUUID", "ServerID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RemoveMapAddressNTF), global::RemoveMapAddressNTF.Parser, new[]{ "MapUUID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMapAddressReq), global::GetMapAddressReq.Parser, new[]{ "MapUUID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMapAddressResp), global::GetMapAddressResp.Parser, new[]{ "ServerID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateStaticMapUUIDNTF), global::UpdateStaticMapUUIDNTF.Parser, new[]{ "ZoneID", "StaticMapID", "StaticMapUUID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetStaticMapUUIDReq), global::GetStaticMapUUIDReq.Parser, new[]{ "ZoneID", "StaticMapID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetStaticMapUUIDResp), global::GetStaticMapUUIDResp.Parser, new[]{ "StaticMapUUID" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class UpdateRoleAddressNTF : pb::IMessage<UpdateRoleAddressNTF> {
  private static readonly pb::MessageParser<UpdateRoleAddressNTF> _parser = new pb::MessageParser<UpdateRoleAddressNTF>(() => new UpdateRoleAddressNTF());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateRoleAddressNTF> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GpsReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoleAddressNTF() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoleAddressNTF(UpdateRoleAddressNTF other) : this() {
    roleUUID_ = other.roleUUID_;
    address_ = other.address_ != null ? other.address_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoleAddressNTF Clone() {
    return new UpdateRoleAddressNTF(this);
  }

  /// <summary>Field number for the "RoleUUID" field.</summary>
  public const int RoleUUIDFieldNumber = 1;
  private string roleUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoleUUID {
    get { return roleUUID_; }
    set {
      roleUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Address" field.</summary>
  public const int AddressFieldNumber = 2;
  private global::RoleAddress address_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RoleAddress Address {
    get { return address_; }
    set {
      address_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateRoleAddressNTF);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateRoleAddressNTF other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoleUUID != other.RoleUUID) return false;
    if (!object.Equals(Address, other.Address)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoleUUID.Length != 0) hash ^= RoleUUID.GetHashCode();
    if (address_ != null) hash ^= Address.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoleUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RoleUUID);
    }
    if (address_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Address);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoleUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleUUID);
    }
    if (address_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateRoleAddressNTF other) {
    if (other == null) {
      return;
    }
    if (other.RoleUUID.Length != 0) {
      RoleUUID = other.RoleUUID;
    }
    if (other.address_ != null) {
      if (address_ == null) {
        Address = new global::RoleAddress();
      }
      Address.MergeFrom(other.Address);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RoleUUID = input.ReadString();
          break;
        }
        case 18: {
          if (address_ == null) {
            Address = new global::RoleAddress();
          }
          input.ReadMessage(Address);
          break;
        }
      }
    }
  }

}

public sealed partial class RemoveRoleAddressNTF : pb::IMessage<RemoveRoleAddressNTF> {
  private static readonly pb::MessageParser<RemoveRoleAddressNTF> _parser = new pb::MessageParser<RemoveRoleAddressNTF>(() => new RemoveRoleAddressNTF());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RemoveRoleAddressNTF> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GpsReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RemoveRoleAddressNTF() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RemoveRoleAddressNTF(RemoveRoleAddressNTF other) : this() {
    roleUUID_ = other.roleUUID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RemoveRoleAddressNTF Clone() {
    return new RemoveRoleAddressNTF(this);
  }

  /// <summary>Field number for the "RoleUUID" field.</summary>
  public const int RoleUUIDFieldNumber = 1;
  private string roleUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoleUUID {
    get { return roleUUID_; }
    set {
      roleUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RemoveRoleAddressNTF);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RemoveRoleAddressNTF other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoleUUID != other.RoleUUID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoleUUID.Length != 0) hash ^= RoleUUID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoleUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RoleUUID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoleUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleUUID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RemoveRoleAddressNTF other) {
    if (other == null) {
      return;
    }
    if (other.RoleUUID.Length != 0) {
      RoleUUID = other.RoleUUID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RoleUUID = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateMapAddressNTF : pb::IMessage<UpdateMapAddressNTF> {
  private static readonly pb::MessageParser<UpdateMapAddressNTF> _parser = new pb::MessageParser<UpdateMapAddressNTF>(() => new UpdateMapAddressNTF());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateMapAddressNTF> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GpsReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMapAddressNTF() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMapAddressNTF(UpdateMapAddressNTF other) : this() {
    mapUUID_ = other.mapUUID_;
    serverID_ = other.serverID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMapAddressNTF Clone() {
    return new UpdateMapAddressNTF(this);
  }

  /// <summary>Field number for the "MapUUID" field.</summary>
  public const int MapUUIDFieldNumber = 1;
  private string mapUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MapUUID {
    get { return mapUUID_; }
    set {
      mapUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ServerID" field.</summary>
  public const int ServerIDFieldNumber = 2;
  private int serverID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ServerID {
    get { return serverID_; }
    set {
      serverID_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateMapAddressNTF);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateMapAddressNTF other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MapUUID != other.MapUUID) return false;
    if (ServerID != other.ServerID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MapUUID.Length != 0) hash ^= MapUUID.GetHashCode();
    if (ServerID != 0) hash ^= ServerID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MapUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MapUUID);
    }
    if (ServerID != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ServerID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MapUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MapUUID);
    }
    if (ServerID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateMapAddressNTF other) {
    if (other == null) {
      return;
    }
    if (other.MapUUID.Length != 0) {
      MapUUID = other.MapUUID;
    }
    if (other.ServerID != 0) {
      ServerID = other.ServerID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MapUUID = input.ReadString();
          break;
        }
        case 16: {
          ServerID = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class RemoveMapAddressNTF : pb::IMessage<RemoveMapAddressNTF> {
  private static readonly pb::MessageParser<RemoveMapAddressNTF> _parser = new pb::MessageParser<RemoveMapAddressNTF>(() => new RemoveMapAddressNTF());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RemoveMapAddressNTF> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GpsReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RemoveMapAddressNTF() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RemoveMapAddressNTF(RemoveMapAddressNTF other) : this() {
    mapUUID_ = other.mapUUID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RemoveMapAddressNTF Clone() {
    return new RemoveMapAddressNTF(this);
  }

  /// <summary>Field number for the "MapUUID" field.</summary>
  public const int MapUUIDFieldNumber = 1;
  private string mapUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MapUUID {
    get { return mapUUID_; }
    set {
      mapUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RemoveMapAddressNTF);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RemoveMapAddressNTF other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MapUUID != other.MapUUID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MapUUID.Length != 0) hash ^= MapUUID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MapUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MapUUID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MapUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MapUUID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RemoveMapAddressNTF other) {
    if (other == null) {
      return;
    }
    if (other.MapUUID.Length != 0) {
      MapUUID = other.MapUUID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MapUUID = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GetMapAddressReq : pb::IMessage<GetMapAddressReq> {
  private static readonly pb::MessageParser<GetMapAddressReq> _parser = new pb::MessageParser<GetMapAddressReq>(() => new GetMapAddressReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMapAddressReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GpsReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMapAddressReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMapAddressReq(GetMapAddressReq other) : this() {
    mapUUID_ = other.mapUUID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMapAddressReq Clone() {
    return new GetMapAddressReq(this);
  }

  /// <summary>Field number for the "MapUUID" field.</summary>
  public const int MapUUIDFieldNumber = 1;
  private string mapUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MapUUID {
    get { return mapUUID_; }
    set {
      mapUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMapAddressReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMapAddressReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MapUUID != other.MapUUID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MapUUID.Length != 0) hash ^= MapUUID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MapUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MapUUID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MapUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MapUUID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMapAddressReq other) {
    if (other == null) {
      return;
    }
    if (other.MapUUID.Length != 0) {
      MapUUID = other.MapUUID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MapUUID = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GetMapAddressResp : pb::IMessage<GetMapAddressResp> {
  private static readonly pb::MessageParser<GetMapAddressResp> _parser = new pb::MessageParser<GetMapAddressResp>(() => new GetMapAddressResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMapAddressResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GpsReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMapAddressResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMapAddressResp(GetMapAddressResp other) : this() {
    serverID_ = other.serverID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMapAddressResp Clone() {
    return new GetMapAddressResp(this);
  }

  /// <summary>Field number for the "ServerID" field.</summary>
  public const int ServerIDFieldNumber = 1;
  private int serverID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ServerID {
    get { return serverID_; }
    set {
      serverID_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMapAddressResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMapAddressResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ServerID != other.ServerID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ServerID != 0) hash ^= ServerID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ServerID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ServerID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ServerID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMapAddressResp other) {
    if (other == null) {
      return;
    }
    if (other.ServerID != 0) {
      ServerID = other.ServerID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ServerID = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateStaticMapUUIDNTF : pb::IMessage<UpdateStaticMapUUIDNTF> {
  private static readonly pb::MessageParser<UpdateStaticMapUUIDNTF> _parser = new pb::MessageParser<UpdateStaticMapUUIDNTF>(() => new UpdateStaticMapUUIDNTF());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateStaticMapUUIDNTF> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GpsReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateStaticMapUUIDNTF() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateStaticMapUUIDNTF(UpdateStaticMapUUIDNTF other) : this() {
    zoneID_ = other.zoneID_;
    staticMapID_ = other.staticMapID_;
    staticMapUUID_ = other.staticMapUUID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateStaticMapUUIDNTF Clone() {
    return new UpdateStaticMapUUIDNTF(this);
  }

  /// <summary>Field number for the "ZoneID" field.</summary>
  public const int ZoneIDFieldNumber = 1;
  private int zoneID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ZoneID {
    get { return zoneID_; }
    set {
      zoneID_ = value;
    }
  }

  /// <summary>Field number for the "StaticMapID" field.</summary>
  public const int StaticMapIDFieldNumber = 2;
  private int staticMapID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StaticMapID {
    get { return staticMapID_; }
    set {
      staticMapID_ = value;
    }
  }

  /// <summary>Field number for the "StaticMapUUID" field.</summary>
  public const int StaticMapUUIDFieldNumber = 3;
  private string staticMapUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StaticMapUUID {
    get { return staticMapUUID_; }
    set {
      staticMapUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateStaticMapUUIDNTF);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateStaticMapUUIDNTF other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ZoneID != other.ZoneID) return false;
    if (StaticMapID != other.StaticMapID) return false;
    if (StaticMapUUID != other.StaticMapUUID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ZoneID != 0) hash ^= ZoneID.GetHashCode();
    if (StaticMapID != 0) hash ^= StaticMapID.GetHashCode();
    if (StaticMapUUID.Length != 0) hash ^= StaticMapUUID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ZoneID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ZoneID);
    }
    if (StaticMapID != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(StaticMapID);
    }
    if (StaticMapUUID.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(StaticMapUUID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ZoneID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneID);
    }
    if (StaticMapID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StaticMapID);
    }
    if (StaticMapUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StaticMapUUID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateStaticMapUUIDNTF other) {
    if (other == null) {
      return;
    }
    if (other.ZoneID != 0) {
      ZoneID = other.ZoneID;
    }
    if (other.StaticMapID != 0) {
      StaticMapID = other.StaticMapID;
    }
    if (other.StaticMapUUID.Length != 0) {
      StaticMapUUID = other.StaticMapUUID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ZoneID = input.ReadInt32();
          break;
        }
        case 16: {
          StaticMapID = input.ReadInt32();
          break;
        }
        case 26: {
          StaticMapUUID = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GetStaticMapUUIDReq : pb::IMessage<GetStaticMapUUIDReq> {
  private static readonly pb::MessageParser<GetStaticMapUUIDReq> _parser = new pb::MessageParser<GetStaticMapUUIDReq>(() => new GetStaticMapUUIDReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetStaticMapUUIDReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GpsReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetStaticMapUUIDReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetStaticMapUUIDReq(GetStaticMapUUIDReq other) : this() {
    zoneID_ = other.zoneID_;
    staticMapID_ = other.staticMapID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetStaticMapUUIDReq Clone() {
    return new GetStaticMapUUIDReq(this);
  }

  /// <summary>Field number for the "ZoneID" field.</summary>
  public const int ZoneIDFieldNumber = 1;
  private int zoneID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ZoneID {
    get { return zoneID_; }
    set {
      zoneID_ = value;
    }
  }

  /// <summary>Field number for the "StaticMapID" field.</summary>
  public const int StaticMapIDFieldNumber = 2;
  private int staticMapID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StaticMapID {
    get { return staticMapID_; }
    set {
      staticMapID_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetStaticMapUUIDReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetStaticMapUUIDReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ZoneID != other.ZoneID) return false;
    if (StaticMapID != other.StaticMapID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ZoneID != 0) hash ^= ZoneID.GetHashCode();
    if (StaticMapID != 0) hash ^= StaticMapID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ZoneID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ZoneID);
    }
    if (StaticMapID != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(StaticMapID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ZoneID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneID);
    }
    if (StaticMapID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StaticMapID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetStaticMapUUIDReq other) {
    if (other == null) {
      return;
    }
    if (other.ZoneID != 0) {
      ZoneID = other.ZoneID;
    }
    if (other.StaticMapID != 0) {
      StaticMapID = other.StaticMapID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ZoneID = input.ReadInt32();
          break;
        }
        case 16: {
          StaticMapID = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class GetStaticMapUUIDResp : pb::IMessage<GetStaticMapUUIDResp> {
  private static readonly pb::MessageParser<GetStaticMapUUIDResp> _parser = new pb::MessageParser<GetStaticMapUUIDResp>(() => new GetStaticMapUUIDResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetStaticMapUUIDResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GpsReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetStaticMapUUIDResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetStaticMapUUIDResp(GetStaticMapUUIDResp other) : this() {
    staticMapUUID_ = other.staticMapUUID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetStaticMapUUIDResp Clone() {
    return new GetStaticMapUUIDResp(this);
  }

  /// <summary>Field number for the "StaticMapUUID" field.</summary>
  public const int StaticMapUUIDFieldNumber = 1;
  private string staticMapUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StaticMapUUID {
    get { return staticMapUUID_; }
    set {
      staticMapUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetStaticMapUUIDResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetStaticMapUUIDResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StaticMapUUID != other.StaticMapUUID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StaticMapUUID.Length != 0) hash ^= StaticMapUUID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StaticMapUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(StaticMapUUID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StaticMapUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StaticMapUUID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetStaticMapUUIDResp other) {
    if (other == null) {
      return;
    }
    if (other.StaticMapUUID.Length != 0) {
      StaticMapUUID = other.StaticMapUUID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          StaticMapUUID = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
