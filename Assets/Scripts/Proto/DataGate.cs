// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: data.gate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from data.gate.proto</summary>
public static partial class DataGateReflection {

  #region Descriptor
  /// <summary>File descriptor for data.gate.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static DataGateReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg9kYXRhLmdhdGUucHJvdG8aD2RhdGEucm9sZS5wcm90byJgCg9Sb2xlU2Vz",
          "c2lvbkluZm8SEAoIUm9sZVVVSUQYASABKAkSHQoHQWRkcmVzcxgCIAEoCzIM",
          "LlJvbGVBZGRyZXNzEhwKBVN0YXRlGAMgASgOMg0uU2Vzc2lvblN0YXRlIjUK",
          "D1Nlc3Npb25DZXJ0RGF0YRILCgNLZXkYASABKAkSFQoNT3V0T2ZEYXRlVGlt",
          "ZRgCIAEoAypICgxTZXNzaW9uU3RhdGUSCwoHT2ZmbGluZRAAEg0KCUNvbm5l",
          "Y3RlZBABEgoKBk9ubGluZRACEhAKDE91dE9mQ29udGFjdBADQhlaF0lOU2Vy",
          "dmVyL3NyYy9wcm90by9kYXRhYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::DataRoleReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SessionState), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::RoleSessionInfo), global::RoleSessionInfo.Parser, new[]{ "RoleUUID", "Address", "State" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SessionCertData), global::SessionCertData.Parser, new[]{ "Key", "OutOfDateTime" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum SessionState {
  /// <summary>
  /// 无连接 默认状态 可以认为无连接的用户应该被Gate删除
  /// </summary>
  [pbr::OriginalName("Offline")] Offline = 0,
  /// <summary>
  /// 连接状态，但是没有经过验证
  /// </summary>
  [pbr::OriginalName("Connected")] Connected = 1,
  /// <summary>
  /// 验证通过状态
  /// </summary>
  [pbr::OriginalName("Online")] Online = 2,
  /// <summary>
  /// 短暂失联状态，可以断线重连
  /// </summary>
  [pbr::OriginalName("OutOfContact")] OutOfContact = 3,
}

#endregion

#region Messages
public sealed partial class RoleSessionInfo : pb::IMessage<RoleSessionInfo> {
  private static readonly pb::MessageParser<RoleSessionInfo> _parser = new pb::MessageParser<RoleSessionInfo>(() => new RoleSessionInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RoleSessionInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DataGateReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoleSessionInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoleSessionInfo(RoleSessionInfo other) : this() {
    roleUUID_ = other.roleUUID_;
    address_ = other.address_ != null ? other.address_.Clone() : null;
    state_ = other.state_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoleSessionInfo Clone() {
    return new RoleSessionInfo(this);
  }

  /// <summary>Field number for the "RoleUUID" field.</summary>
  public const int RoleUUIDFieldNumber = 1;
  private string roleUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoleUUID {
    get { return roleUUID_; }
    set {
      roleUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Address" field.</summary>
  public const int AddressFieldNumber = 2;
  private global::RoleAddress address_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RoleAddress Address {
    get { return address_; }
    set {
      address_ = value;
    }
  }

  /// <summary>Field number for the "State" field.</summary>
  public const int StateFieldNumber = 3;
  private global::SessionState state_ = global::SessionState.Offline;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SessionState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RoleSessionInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RoleSessionInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoleUUID != other.RoleUUID) return false;
    if (!object.Equals(Address, other.Address)) return false;
    if (State != other.State) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoleUUID.Length != 0) hash ^= RoleUUID.GetHashCode();
    if (address_ != null) hash ^= Address.GetHashCode();
    if (State != global::SessionState.Offline) hash ^= State.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoleUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RoleUUID);
    }
    if (address_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Address);
    }
    if (State != global::SessionState.Offline) {
      output.WriteRawTag(24);
      output.WriteEnum((int) State);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoleUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleUUID);
    }
    if (address_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
    }
    if (State != global::SessionState.Offline) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RoleSessionInfo other) {
    if (other == null) {
      return;
    }
    if (other.RoleUUID.Length != 0) {
      RoleUUID = other.RoleUUID;
    }
    if (other.address_ != null) {
      if (address_ == null) {
        Address = new global::RoleAddress();
      }
      Address.MergeFrom(other.Address);
    }
    if (other.State != global::SessionState.Offline) {
      State = other.State;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RoleUUID = input.ReadString();
          break;
        }
        case 18: {
          if (address_ == null) {
            Address = new global::RoleAddress();
          }
          input.ReadMessage(Address);
          break;
        }
        case 24: {
          State = (global::SessionState) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class SessionCertData : pb::IMessage<SessionCertData> {
  private static readonly pb::MessageParser<SessionCertData> _parser = new pb::MessageParser<SessionCertData>(() => new SessionCertData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SessionCertData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DataGateReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SessionCertData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SessionCertData(SessionCertData other) : this() {
    key_ = other.key_;
    outOfDateTime_ = other.outOfDateTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SessionCertData Clone() {
    return new SessionCertData(this);
  }

  /// <summary>Field number for the "Key" field.</summary>
  public const int KeyFieldNumber = 1;
  private string key_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Key {
    get { return key_; }
    set {
      key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "OutOfDateTime" field.</summary>
  public const int OutOfDateTimeFieldNumber = 2;
  private long outOfDateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long OutOfDateTime {
    get { return outOfDateTime_; }
    set {
      outOfDateTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SessionCertData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SessionCertData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Key != other.Key) return false;
    if (OutOfDateTime != other.OutOfDateTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Key.Length != 0) hash ^= Key.GetHashCode();
    if (OutOfDateTime != 0L) hash ^= OutOfDateTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Key.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (OutOfDateTime != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(OutOfDateTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Key.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
    }
    if (OutOfDateTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(OutOfDateTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SessionCertData other) {
    if (other == null) {
      return;
    }
    if (other.Key.Length != 0) {
      Key = other.Key;
    }
    if (other.OutOfDateTime != 0L) {
      OutOfDateTime = other.OutOfDateTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 16: {
          OutOfDateTime = input.ReadInt64();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
