// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: component.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from component.proto</summary>
public static partial class ComponentReflection {

  #region Descriptor
  /// <summary>File descriptor for component.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ComponentReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg9jb21wb25lbnQucHJvdG8aCm1hdGgucHJvdG8iTwoSVHJhbnNmb3JtQ29t",
          "cG9uZW50EhoKCFBvc2l0aW9uGAEgASgLMgguVmVjdG9yMxIdCghyb3RhdGlv",
          "bhgCIAEoCzILLlF1YXRlcm5pb24iXAoQUGh5c2ljc0NvbXBvbmVudBIMCgRN",
          "YXNzGAEgASgBEhoKCFJhd1NwZWVkGAIgASgLMgguVmVjdG9yMxIeCgxQYXNz",
          "aXZlU3BlZWQYAyABKAsyCC5WZWN0b3IzInUKCUNvbXBvbmVudBIcCgRUeXBl",
          "GAEgASgOMg4uQ29tcG9uZW50VHlwZRImCglUcmFuc2Zvcm0YAiABKAsyEy5U",
          "cmFuc2Zvcm1Db21wb25lbnQSIgoHUGh5c2ljcxgDIAEoCzIRLlBoeXNpY3ND",
          "b21wb25lbnQqOAoNQ29tcG9uZW50VHlwZRILCgdJbnZhbGlkEAASDQoJVHJh",
          "bnNvZnJtEAESCwoHUGh5c2ljcxACQhlaF0lOU2VydmVyL3NyYy9wcm90by9k",
          "YXRhYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::MathReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ComponentType), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::TransformComponent), global::TransformComponent.Parser, new[]{ "Position", "Rotation" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PhysicsComponent), global::PhysicsComponent.Parser, new[]{ "Mass", "RawSpeed", "PassiveSpeed" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Component), global::Component.Parser, new[]{ "Type", "Transform", "Physics" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
/// <summary>
/// 注意 新加的ComponentType加在Max之前
/// </summary>
public enum ComponentType {
  [pbr::OriginalName("Invalid")] Invalid = 0,
  [pbr::OriginalName("Transofrm")] Transofrm = 1,
  [pbr::OriginalName("Physics")] Physics = 2,
}

#endregion

#region Messages
public sealed partial class TransformComponent : pb::IMessage<TransformComponent> {
  private static readonly pb::MessageParser<TransformComponent> _parser = new pb::MessageParser<TransformComponent>(() => new TransformComponent());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TransformComponent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ComponentReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TransformComponent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TransformComponent(TransformComponent other) : this() {
    position_ = other.position_ != null ? other.position_.Clone() : null;
    rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TransformComponent Clone() {
    return new TransformComponent(this);
  }

  /// <summary>Field number for the "Position" field.</summary>
  public const int PositionFieldNumber = 1;
  private global::Vector3 position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vector3 Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 2;
  private global::Quaternion rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Quaternion Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TransformComponent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TransformComponent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Position, other.Position)) return false;
    if (!object.Equals(Rotation, other.Rotation)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (position_ != null) hash ^= Position.GetHashCode();
    if (rotation_ != null) hash ^= Rotation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (position_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Position);
    }
    if (rotation_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Rotation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (rotation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TransformComponent other) {
    if (other == null) {
      return;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::Vector3();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.rotation_ != null) {
      if (rotation_ == null) {
        Rotation = new global::Quaternion();
      }
      Rotation.MergeFrom(other.Rotation);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (position_ == null) {
            Position = new global::Vector3();
          }
          input.ReadMessage(Position);
          break;
        }
        case 18: {
          if (rotation_ == null) {
            Rotation = new global::Quaternion();
          }
          input.ReadMessage(Rotation);
          break;
        }
      }
    }
  }

}

public sealed partial class PhysicsComponent : pb::IMessage<PhysicsComponent> {
  private static readonly pb::MessageParser<PhysicsComponent> _parser = new pb::MessageParser<PhysicsComponent>(() => new PhysicsComponent());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PhysicsComponent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ComponentReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PhysicsComponent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PhysicsComponent(PhysicsComponent other) : this() {
    mass_ = other.mass_;
    rawSpeed_ = other.rawSpeed_ != null ? other.rawSpeed_.Clone() : null;
    passiveSpeed_ = other.passiveSpeed_ != null ? other.passiveSpeed_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PhysicsComponent Clone() {
    return new PhysicsComponent(this);
  }

  /// <summary>Field number for the "Mass" field.</summary>
  public const int MassFieldNumber = 1;
  private double mass_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Mass {
    get { return mass_; }
    set {
      mass_ = value;
    }
  }

  /// <summary>Field number for the "RawSpeed" field.</summary>
  public const int RawSpeedFieldNumber = 2;
  private global::Vector3 rawSpeed_;
  /// <summary>
  /// 玩家操作的移动速度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vector3 RawSpeed {
    get { return rawSpeed_; }
    set {
      rawSpeed_ = value;
    }
  }

  /// <summary>Field number for the "PassiveSpeed" field.</summary>
  public const int PassiveSpeedFieldNumber = 3;
  private global::Vector3 passiveSpeed_;
  /// <summary>
  /// 其他外力影响的速度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vector3 PassiveSpeed {
    get { return passiveSpeed_; }
    set {
      passiveSpeed_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PhysicsComponent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PhysicsComponent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mass, other.Mass)) return false;
    if (!object.Equals(RawSpeed, other.RawSpeed)) return false;
    if (!object.Equals(PassiveSpeed, other.PassiveSpeed)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Mass != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mass);
    if (rawSpeed_ != null) hash ^= RawSpeed.GetHashCode();
    if (passiveSpeed_ != null) hash ^= PassiveSpeed.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Mass != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(Mass);
    }
    if (rawSpeed_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(RawSpeed);
    }
    if (passiveSpeed_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(PassiveSpeed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Mass != 0D) {
      size += 1 + 8;
    }
    if (rawSpeed_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RawSpeed);
    }
    if (passiveSpeed_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PassiveSpeed);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PhysicsComponent other) {
    if (other == null) {
      return;
    }
    if (other.Mass != 0D) {
      Mass = other.Mass;
    }
    if (other.rawSpeed_ != null) {
      if (rawSpeed_ == null) {
        RawSpeed = new global::Vector3();
      }
      RawSpeed.MergeFrom(other.RawSpeed);
    }
    if (other.passiveSpeed_ != null) {
      if (passiveSpeed_ == null) {
        PassiveSpeed = new global::Vector3();
      }
      PassiveSpeed.MergeFrom(other.PassiveSpeed);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Mass = input.ReadDouble();
          break;
        }
        case 18: {
          if (rawSpeed_ == null) {
            RawSpeed = new global::Vector3();
          }
          input.ReadMessage(RawSpeed);
          break;
        }
        case 26: {
          if (passiveSpeed_ == null) {
            PassiveSpeed = new global::Vector3();
          }
          input.ReadMessage(PassiveSpeed);
          break;
        }
      }
    }
  }

}

public sealed partial class Component : pb::IMessage<Component> {
  private static readonly pb::MessageParser<Component> _parser = new pb::MessageParser<Component>(() => new Component());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Component> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ComponentReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Component() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Component(Component other) : this() {
    type_ = other.type_;
    transform_ = other.transform_ != null ? other.transform_.Clone() : null;
    physics_ = other.physics_ != null ? other.physics_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Component Clone() {
    return new Component(this);
  }

  /// <summary>Field number for the "Type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::ComponentType type_ = global::ComponentType.Invalid;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ComponentType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "Transform" field.</summary>
  public const int TransformFieldNumber = 2;
  private global::TransformComponent transform_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TransformComponent Transform {
    get { return transform_; }
    set {
      transform_ = value;
    }
  }

  /// <summary>Field number for the "Physics" field.</summary>
  public const int PhysicsFieldNumber = 3;
  private global::PhysicsComponent physics_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PhysicsComponent Physics {
    get { return physics_; }
    set {
      physics_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Component);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Component other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (!object.Equals(Transform, other.Transform)) return false;
    if (!object.Equals(Physics, other.Physics)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != global::ComponentType.Invalid) hash ^= Type.GetHashCode();
    if (transform_ != null) hash ^= Transform.GetHashCode();
    if (physics_ != null) hash ^= Physics.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != global::ComponentType.Invalid) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (transform_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Transform);
    }
    if (physics_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Physics);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != global::ComponentType.Invalid) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (transform_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transform);
    }
    if (physics_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Physics);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Component other) {
    if (other == null) {
      return;
    }
    if (other.Type != global::ComponentType.Invalid) {
      Type = other.Type;
    }
    if (other.transform_ != null) {
      if (transform_ == null) {
        Transform = new global::TransformComponent();
      }
      Transform.MergeFrom(other.Transform);
    }
    if (other.physics_ != null) {
      if (physics_ == null) {
        Physics = new global::PhysicsComponent();
      }
      Physics.MergeFrom(other.Physics);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = (global::ComponentType) input.ReadEnum();
          break;
        }
        case 18: {
          if (transform_ == null) {
            Transform = new global::TransformComponent();
          }
          input.ReadMessage(Transform);
          break;
        }
        case 26: {
          if (physics_ == null) {
            Physics = new global::PhysicsComponent();
          }
          input.ReadMessage(Physics);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
