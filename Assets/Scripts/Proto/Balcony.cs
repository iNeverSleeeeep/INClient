// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: balcony.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from balcony.proto</summary>
public static partial class BalconyReflection {

  #region Descriptor
  /// <summary>File descriptor for balcony.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static BalconyReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg1iYWxjb255LnByb3RvGg9kYXRhLnJvbGUucHJvdG8iIAoMUm9sZUVudGVy",
          "UmVxEhAKCFJvbGVVVUlEGAEgASgJIlUKDVJvbGVFbnRlclJlc3ASDwoHU3Vj",
          "Y2VzcxgBIAEoCBINCgVNYXBJRBgCIAEoBRITCgRSb2xlGAMgASgLMgUuUm9s",
          "ZRIPCgdXb3JsZElEGAQgASgFQhhaFklOU2VydmVyL3NyYy9wcm90by9tc2di",
          "BnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::DataRoleReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::RoleEnterReq), global::RoleEnterReq.Parser, new[]{ "RoleUUID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RoleEnterResp), global::RoleEnterResp.Parser, new[]{ "Success", "MapID", "Role", "WorldID" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class RoleEnterReq : pb::IMessage<RoleEnterReq> {
  private static readonly pb::MessageParser<RoleEnterReq> _parser = new pb::MessageParser<RoleEnterReq>(() => new RoleEnterReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RoleEnterReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BalconyReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoleEnterReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoleEnterReq(RoleEnterReq other) : this() {
    roleUUID_ = other.roleUUID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoleEnterReq Clone() {
    return new RoleEnterReq(this);
  }

  /// <summary>Field number for the "RoleUUID" field.</summary>
  public const int RoleUUIDFieldNumber = 1;
  private string roleUUID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoleUUID {
    get { return roleUUID_; }
    set {
      roleUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RoleEnterReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RoleEnterReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoleUUID != other.RoleUUID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoleUUID.Length != 0) hash ^= RoleUUID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoleUUID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RoleUUID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoleUUID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleUUID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RoleEnterReq other) {
    if (other == null) {
      return;
    }
    if (other.RoleUUID.Length != 0) {
      RoleUUID = other.RoleUUID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RoleUUID = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class RoleEnterResp : pb::IMessage<RoleEnterResp> {
  private static readonly pb::MessageParser<RoleEnterResp> _parser = new pb::MessageParser<RoleEnterResp>(() => new RoleEnterResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RoleEnterResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BalconyReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoleEnterResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoleEnterResp(RoleEnterResp other) : this() {
    success_ = other.success_;
    mapID_ = other.mapID_;
    role_ = other.role_ != null ? other.role_.Clone() : null;
    worldID_ = other.worldID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoleEnterResp Clone() {
    return new RoleEnterResp(this);
  }

  /// <summary>Field number for the "Success" field.</summary>
  public const int SuccessFieldNumber = 1;
  private bool success_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Success {
    get { return success_; }
    set {
      success_ = value;
    }
  }

  /// <summary>Field number for the "MapID" field.</summary>
  public const int MapIDFieldNumber = 2;
  private int mapID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MapID {
    get { return mapID_; }
    set {
      mapID_ = value;
    }
  }

  /// <summary>Field number for the "Role" field.</summary>
  public const int RoleFieldNumber = 3;
  private global::Role role_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Role Role {
    get { return role_; }
    set {
      role_ = value;
    }
  }

  /// <summary>Field number for the "WorldID" field.</summary>
  public const int WorldIDFieldNumber = 4;
  private int worldID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int WorldID {
    get { return worldID_; }
    set {
      worldID_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RoleEnterResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RoleEnterResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Success != other.Success) return false;
    if (MapID != other.MapID) return false;
    if (!object.Equals(Role, other.Role)) return false;
    if (WorldID != other.WorldID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Success != false) hash ^= Success.GetHashCode();
    if (MapID != 0) hash ^= MapID.GetHashCode();
    if (role_ != null) hash ^= Role.GetHashCode();
    if (WorldID != 0) hash ^= WorldID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Success != false) {
      output.WriteRawTag(8);
      output.WriteBool(Success);
    }
    if (MapID != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(MapID);
    }
    if (role_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Role);
    }
    if (WorldID != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(WorldID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Success != false) {
      size += 1 + 1;
    }
    if (MapID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapID);
    }
    if (role_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Role);
    }
    if (WorldID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(WorldID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RoleEnterResp other) {
    if (other == null) {
      return;
    }
    if (other.Success != false) {
      Success = other.Success;
    }
    if (other.MapID != 0) {
      MapID = other.MapID;
    }
    if (other.role_ != null) {
      if (role_ == null) {
        Role = new global::Role();
      }
      Role.MergeFrom(other.Role);
    }
    if (other.WorldID != 0) {
      WorldID = other.WorldID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Success = input.ReadBool();
          break;
        }
        case 16: {
          MapID = input.ReadInt32();
          break;
        }
        case 26: {
          if (role_ == null) {
            Role = new global::Role();
          }
          input.ReadMessage(Role);
          break;
        }
        case 32: {
          WorldID = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
