// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: center.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from center.proto</summary>
public static partial class CenterReflection {

  #region Descriptor
  /// <summary>File descriptor for center.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CenterReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgxjZW50ZXIucHJvdG8aEWV0Yy5zZXJ2ZXJzLnByb3RvGg9ldGMuem9uZXMu",
          "cHJvdG8aD2V0Yy5iYXNpYy5wcm90bxoSZXRjLmRhdGFiYXNlLnByb3RvIooB",
          "CgpFVENTeW5jTlRGEiEKC0Jhc2ljQ29uZmlnGAEgASgLMgwuQmFzaWNDb25m",
          "aWcSGwoIRGF0YWJhc2UYAiABKAsyCS5EYXRhYmFzZRIfCgpTZXJ2ZXJMaXN0",
          "GAMgASgLMgsuU2VydmVyTGlzdBIbCghab25lTGlzdBgEIAEoCzIJLlpvbmVM",
          "aXN0Ih8KDE5vZGVTdGFydE5URhIPCgdBZGRyZXNzGAEgASgMIjoKBE5vZGUS",
          "HQoJTm9kZVN0YXRlGAEgASgOMgouTm9kZVN0YXRlEhMKC05vZGVBZGRyZXNz",
          "GAIgASgMIiQKDE5vZGVzSW5mb05URhIUCgVOb2RlcxgBIAMoCzIFLk5vZGUi",
          "JgoSUmVzZXRDb25uZWN0aW9uTlRGEhAKCFNlcnZlcklEGAEgASgFKjsKCU5v",
          "ZGVTdGF0ZRIJCgVVbnNldBAAEgkKBVJlYWR5EAESCwoHUnVubmluZxACEgsK",
          "B09mZmxpbmUQA0IYWhZJTlNlcnZlci9zcmMvcHJvdG8vbXNnYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::EtcServersReflection.Descriptor, global::EtcZonesReflection.Descriptor, global::EtcBasicReflection.Descriptor, global::EtcDatabaseReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::NodeState), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ETCSyncNTF), global::ETCSyncNTF.Parser, new[]{ "BasicConfig", "Database", "ServerList", "ZoneList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::NodeStartNTF), global::NodeStartNTF.Parser, new[]{ "Address" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Node), global::Node.Parser, new[]{ "NodeState", "NodeAddress" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::NodesInfoNTF), global::NodesInfoNTF.Parser, new[]{ "Nodes" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ResetConnectionNTF), global::ResetConnectionNTF.Parser, new[]{ "ServerID" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum NodeState {
  [pbr::OriginalName("Unset")] Unset = 0,
  [pbr::OriginalName("Ready")] Ready = 1,
  [pbr::OriginalName("Running")] Running = 2,
  [pbr::OriginalName("Offline")] Offline = 3,
}

#endregion

#region Messages
public sealed partial class ETCSyncNTF : pb::IMessage<ETCSyncNTF> {
  private static readonly pb::MessageParser<ETCSyncNTF> _parser = new pb::MessageParser<ETCSyncNTF>(() => new ETCSyncNTF());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ETCSyncNTF> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CenterReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ETCSyncNTF() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ETCSyncNTF(ETCSyncNTF other) : this() {
    basicConfig_ = other.basicConfig_ != null ? other.basicConfig_.Clone() : null;
    database_ = other.database_ != null ? other.database_.Clone() : null;
    serverList_ = other.serverList_ != null ? other.serverList_.Clone() : null;
    zoneList_ = other.zoneList_ != null ? other.zoneList_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ETCSyncNTF Clone() {
    return new ETCSyncNTF(this);
  }

  /// <summary>Field number for the "BasicConfig" field.</summary>
  public const int BasicConfigFieldNumber = 1;
  private global::BasicConfig basicConfig_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BasicConfig BasicConfig {
    get { return basicConfig_; }
    set {
      basicConfig_ = value;
    }
  }

  /// <summary>Field number for the "Database" field.</summary>
  public const int DatabaseFieldNumber = 2;
  private global::Database database_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Database Database {
    get { return database_; }
    set {
      database_ = value;
    }
  }

  /// <summary>Field number for the "ServerList" field.</summary>
  public const int ServerListFieldNumber = 3;
  private global::ServerList serverList_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ServerList ServerList {
    get { return serverList_; }
    set {
      serverList_ = value;
    }
  }

  /// <summary>Field number for the "ZoneList" field.</summary>
  public const int ZoneListFieldNumber = 4;
  private global::ZoneList zoneList_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ZoneList ZoneList {
    get { return zoneList_; }
    set {
      zoneList_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ETCSyncNTF);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ETCSyncNTF other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(BasicConfig, other.BasicConfig)) return false;
    if (!object.Equals(Database, other.Database)) return false;
    if (!object.Equals(ServerList, other.ServerList)) return false;
    if (!object.Equals(ZoneList, other.ZoneList)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (basicConfig_ != null) hash ^= BasicConfig.GetHashCode();
    if (database_ != null) hash ^= Database.GetHashCode();
    if (serverList_ != null) hash ^= ServerList.GetHashCode();
    if (zoneList_ != null) hash ^= ZoneList.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (basicConfig_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(BasicConfig);
    }
    if (database_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Database);
    }
    if (serverList_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(ServerList);
    }
    if (zoneList_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(ZoneList);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (basicConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicConfig);
    }
    if (database_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Database);
    }
    if (serverList_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerList);
    }
    if (zoneList_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ZoneList);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ETCSyncNTF other) {
    if (other == null) {
      return;
    }
    if (other.basicConfig_ != null) {
      if (basicConfig_ == null) {
        BasicConfig = new global::BasicConfig();
      }
      BasicConfig.MergeFrom(other.BasicConfig);
    }
    if (other.database_ != null) {
      if (database_ == null) {
        Database = new global::Database();
      }
      Database.MergeFrom(other.Database);
    }
    if (other.serverList_ != null) {
      if (serverList_ == null) {
        ServerList = new global::ServerList();
      }
      ServerList.MergeFrom(other.ServerList);
    }
    if (other.zoneList_ != null) {
      if (zoneList_ == null) {
        ZoneList = new global::ZoneList();
      }
      ZoneList.MergeFrom(other.ZoneList);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (basicConfig_ == null) {
            BasicConfig = new global::BasicConfig();
          }
          input.ReadMessage(BasicConfig);
          break;
        }
        case 18: {
          if (database_ == null) {
            Database = new global::Database();
          }
          input.ReadMessage(Database);
          break;
        }
        case 26: {
          if (serverList_ == null) {
            ServerList = new global::ServerList();
          }
          input.ReadMessage(ServerList);
          break;
        }
        case 34: {
          if (zoneList_ == null) {
            ZoneList = new global::ZoneList();
          }
          input.ReadMessage(ZoneList);
          break;
        }
      }
    }
  }

}

public sealed partial class NodeStartNTF : pb::IMessage<NodeStartNTF> {
  private static readonly pb::MessageParser<NodeStartNTF> _parser = new pb::MessageParser<NodeStartNTF>(() => new NodeStartNTF());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<NodeStartNTF> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CenterReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NodeStartNTF() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NodeStartNTF(NodeStartNTF other) : this() {
    address_ = other.address_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NodeStartNTF Clone() {
    return new NodeStartNTF(this);
  }

  /// <summary>Field number for the "Address" field.</summary>
  public const int AddressFieldNumber = 1;
  private pb::ByteString address_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Address {
    get { return address_; }
    set {
      address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as NodeStartNTF);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(NodeStartNTF other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Address != other.Address) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Address.Length != 0) hash ^= Address.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Address.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(Address);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Address.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Address);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(NodeStartNTF other) {
    if (other == null) {
      return;
    }
    if (other.Address.Length != 0) {
      Address = other.Address;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Address = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class Node : pb::IMessage<Node> {
  private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Node> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CenterReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Node() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Node(Node other) : this() {
    nodeState_ = other.nodeState_;
    nodeAddress_ = other.nodeAddress_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Node Clone() {
    return new Node(this);
  }

  /// <summary>Field number for the "NodeState" field.</summary>
  public const int NodeStateFieldNumber = 1;
  private global::NodeState nodeState_ = global::NodeState.Unset;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::NodeState NodeState {
    get { return nodeState_; }
    set {
      nodeState_ = value;
    }
  }

  /// <summary>Field number for the "NodeAddress" field.</summary>
  public const int NodeAddressFieldNumber = 2;
  private pb::ByteString nodeAddress_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString NodeAddress {
    get { return nodeAddress_; }
    set {
      nodeAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Node);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Node other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NodeState != other.NodeState) return false;
    if (NodeAddress != other.NodeAddress) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (NodeState != global::NodeState.Unset) hash ^= NodeState.GetHashCode();
    if (NodeAddress.Length != 0) hash ^= NodeAddress.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (NodeState != global::NodeState.Unset) {
      output.WriteRawTag(8);
      output.WriteEnum((int) NodeState);
    }
    if (NodeAddress.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(NodeAddress);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (NodeState != global::NodeState.Unset) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NodeState);
    }
    if (NodeAddress.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(NodeAddress);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Node other) {
    if (other == null) {
      return;
    }
    if (other.NodeState != global::NodeState.Unset) {
      NodeState = other.NodeState;
    }
    if (other.NodeAddress.Length != 0) {
      NodeAddress = other.NodeAddress;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          NodeState = (global::NodeState) input.ReadEnum();
          break;
        }
        case 18: {
          NodeAddress = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class NodesInfoNTF : pb::IMessage<NodesInfoNTF> {
  private static readonly pb::MessageParser<NodesInfoNTF> _parser = new pb::MessageParser<NodesInfoNTF>(() => new NodesInfoNTF());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<NodesInfoNTF> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CenterReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NodesInfoNTF() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NodesInfoNTF(NodesInfoNTF other) : this() {
    nodes_ = other.nodes_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NodesInfoNTF Clone() {
    return new NodesInfoNTF(this);
  }

  /// <summary>Field number for the "Nodes" field.</summary>
  public const int NodesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Node> _repeated_nodes_codec
      = pb::FieldCodec.ForMessage(10, global::Node.Parser);
  private readonly pbc::RepeatedField<global::Node> nodes_ = new pbc::RepeatedField<global::Node>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Node> Nodes {
    get { return nodes_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as NodesInfoNTF);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(NodesInfoNTF other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!nodes_.Equals(other.nodes_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= nodes_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    nodes_.WriteTo(output, _repeated_nodes_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += nodes_.CalculateSize(_repeated_nodes_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(NodesInfoNTF other) {
    if (other == null) {
      return;
    }
    nodes_.Add(other.nodes_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ResetConnectionNTF : pb::IMessage<ResetConnectionNTF> {
  private static readonly pb::MessageParser<ResetConnectionNTF> _parser = new pb::MessageParser<ResetConnectionNTF>(() => new ResetConnectionNTF());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ResetConnectionNTF> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CenterReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResetConnectionNTF() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResetConnectionNTF(ResetConnectionNTF other) : this() {
    serverID_ = other.serverID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResetConnectionNTF Clone() {
    return new ResetConnectionNTF(this);
  }

  /// <summary>Field number for the "ServerID" field.</summary>
  public const int ServerIDFieldNumber = 1;
  private int serverID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ServerID {
    get { return serverID_; }
    set {
      serverID_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ResetConnectionNTF);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ResetConnectionNTF other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ServerID != other.ServerID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ServerID != 0) hash ^= ServerID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ServerID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ServerID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ServerID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ResetConnectionNTF other) {
    if (other == null) {
      return;
    }
    if (other.ServerID != 0) {
      ServerID = other.ServerID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ServerID = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
