// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: center.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from center.proto</summary>
public static partial class CenterReflection {

  #region Descriptor
  /// <summary>File descriptor for center.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CenterReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgxjZW50ZXIucHJvdG8aDXNlcnZlcnMucHJvdG8aC3pvbmVzLnByb3RvIisK",
          "DlNlcnZlclN0YXRlUmVxEhkKBEluZm8YASABKAsyCy5TZXJ2ZXJJbmZvIjQK",
          "EVN0YXRpY01hcExvY2F0aW9uEg0KBU1hcElEGAEgASgFEhAKCFNlcnZlcklE",
          "GAIgASgFIk4KDFpvbmVMb2NhdGlvbhIOCgZab25lSUQYASABKAUSLgoSU3Rh",
          "dGljTWFwTG9jYXRpb25zGAIgAygLMhIuU3RhdGljTWFwTG9jYXRpb24isQEK",
          "D1NlcnZlclN0YXRlUmVzcBISCgpTZXJ2ZXJUeXBlGAEgASgJEg8KB01lc3Nh",
          "Z2UYAiABKAkSIwoMU2VydmVyQ29uZmlnGAMgASgLMg0uU2VydmVyQ29uZmln",
          "EhgKB1NlcnZlcnMYBCADKAsyBy5TZXJ2ZXISFAoFWm9uZXMYBSADKAsyBS5a",
          "b25lEiQKDVpvbmVMb2NhdGlvbnMYBiADKAsyDS5ab25lTG9jYXRpb24iTAoK",
          "U2VydmVySW5mbxIQCghTZXJ2ZXJJRBgBIAEoBRIPCgdBZGRyZXNzGAIgASgM",
          "EhsKBVN0YXRlGAMgASgOMgwuU2VydmVyU3RhdGUiLgoOU2VydmVySW5mb0xp",
          "c3QSHAoHU2VydmVycxgBIAMoCzILLlNlcnZlckluZm8ihgEKCVVwZGF0ZUVU",
          "QxIjCgxTZXJ2ZXJDb25maWcYASABKAsyDS5TZXJ2ZXJDb25maWcSGAoHU2Vy",
          "dmVycxgCIAMoCzIHLlNlcnZlchIUCgVab25lcxgDIAMoCzIFLlpvbmUSJAoN",
          "Wm9uZUxvY2F0aW9ucxgEIAMoCzINLlpvbmVMb2NhdGlvbio9CgtTZXJ2ZXJT",
          "dGF0ZRIJCgVTdGFydBAAEgkKBVJlYWR5EAESCwoHUnVubmluZxACEgsKB09m",
          "ZmxpbmUQA0IYWhZJTlNlcnZlci9zcmMvcHJvdG8vbXNnYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::ServersReflection.Descriptor, global::ZonesReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ServerState), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerStateReq), global::ServerStateReq.Parser, new[]{ "Info" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::StaticMapLocation), global::StaticMapLocation.Parser, new[]{ "MapID", "ServerID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ZoneLocation), global::ZoneLocation.Parser, new[]{ "ZoneID", "StaticMapLocations" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerStateResp), global::ServerStateResp.Parser, new[]{ "ServerType", "Message", "ServerConfig", "Servers", "Zones", "ZoneLocations" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerInfo), global::ServerInfo.Parser, new[]{ "ServerID", "Address", "State" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerInfoList), global::ServerInfoList.Parser, new[]{ "Servers" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateETC), global::UpdateETC.Parser, new[]{ "ServerConfig", "Servers", "Zones", "ZoneLocations" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum ServerState {
  [pbr::OriginalName("Start")] Start = 0,
  [pbr::OriginalName("Ready")] Ready = 1,
  [pbr::OriginalName("Running")] Running = 2,
  [pbr::OriginalName("Offline")] Offline = 3,
}

#endregion

#region Messages
public sealed partial class ServerStateReq : pb::IMessage<ServerStateReq> {
  private static readonly pb::MessageParser<ServerStateReq> _parser = new pb::MessageParser<ServerStateReq>(() => new ServerStateReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerStateReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CenterReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerStateReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerStateReq(ServerStateReq other) : this() {
    info_ = other.info_ != null ? other.info_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerStateReq Clone() {
    return new ServerStateReq(this);
  }

  /// <summary>Field number for the "Info" field.</summary>
  public const int InfoFieldNumber = 1;
  private global::ServerInfo info_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ServerInfo Info {
    get { return info_; }
    set {
      info_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerStateReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerStateReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Info, other.Info)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (info_ != null) hash ^= Info.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (info_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Info);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (info_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerStateReq other) {
    if (other == null) {
      return;
    }
    if (other.info_ != null) {
      if (info_ == null) {
        Info = new global::ServerInfo();
      }
      Info.MergeFrom(other.Info);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (info_ == null) {
            Info = new global::ServerInfo();
          }
          input.ReadMessage(Info);
          break;
        }
      }
    }
  }

}

public sealed partial class StaticMapLocation : pb::IMessage<StaticMapLocation> {
  private static readonly pb::MessageParser<StaticMapLocation> _parser = new pb::MessageParser<StaticMapLocation>(() => new StaticMapLocation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<StaticMapLocation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CenterReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StaticMapLocation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StaticMapLocation(StaticMapLocation other) : this() {
    mapID_ = other.mapID_;
    serverID_ = other.serverID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StaticMapLocation Clone() {
    return new StaticMapLocation(this);
  }

  /// <summary>Field number for the "MapID" field.</summary>
  public const int MapIDFieldNumber = 1;
  private int mapID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MapID {
    get { return mapID_; }
    set {
      mapID_ = value;
    }
  }

  /// <summary>Field number for the "ServerID" field.</summary>
  public const int ServerIDFieldNumber = 2;
  private int serverID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ServerID {
    get { return serverID_; }
    set {
      serverID_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as StaticMapLocation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(StaticMapLocation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MapID != other.MapID) return false;
    if (ServerID != other.ServerID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MapID != 0) hash ^= MapID.GetHashCode();
    if (ServerID != 0) hash ^= ServerID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MapID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(MapID);
    }
    if (ServerID != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ServerID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MapID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapID);
    }
    if (ServerID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(StaticMapLocation other) {
    if (other == null) {
      return;
    }
    if (other.MapID != 0) {
      MapID = other.MapID;
    }
    if (other.ServerID != 0) {
      ServerID = other.ServerID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          MapID = input.ReadInt32();
          break;
        }
        case 16: {
          ServerID = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class ZoneLocation : pb::IMessage<ZoneLocation> {
  private static readonly pb::MessageParser<ZoneLocation> _parser = new pb::MessageParser<ZoneLocation>(() => new ZoneLocation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ZoneLocation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CenterReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ZoneLocation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ZoneLocation(ZoneLocation other) : this() {
    zoneID_ = other.zoneID_;
    staticMapLocations_ = other.staticMapLocations_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ZoneLocation Clone() {
    return new ZoneLocation(this);
  }

  /// <summary>Field number for the "ZoneID" field.</summary>
  public const int ZoneIDFieldNumber = 1;
  private int zoneID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ZoneID {
    get { return zoneID_; }
    set {
      zoneID_ = value;
    }
  }

  /// <summary>Field number for the "StaticMapLocations" field.</summary>
  public const int StaticMapLocationsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::StaticMapLocation> _repeated_staticMapLocations_codec
      = pb::FieldCodec.ForMessage(18, global::StaticMapLocation.Parser);
  private readonly pbc::RepeatedField<global::StaticMapLocation> staticMapLocations_ = new pbc::RepeatedField<global::StaticMapLocation>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::StaticMapLocation> StaticMapLocations {
    get { return staticMapLocations_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ZoneLocation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ZoneLocation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ZoneID != other.ZoneID) return false;
    if(!staticMapLocations_.Equals(other.staticMapLocations_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ZoneID != 0) hash ^= ZoneID.GetHashCode();
    hash ^= staticMapLocations_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ZoneID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ZoneID);
    }
    staticMapLocations_.WriteTo(output, _repeated_staticMapLocations_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ZoneID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneID);
    }
    size += staticMapLocations_.CalculateSize(_repeated_staticMapLocations_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ZoneLocation other) {
    if (other == null) {
      return;
    }
    if (other.ZoneID != 0) {
      ZoneID = other.ZoneID;
    }
    staticMapLocations_.Add(other.staticMapLocations_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ZoneID = input.ReadInt32();
          break;
        }
        case 18: {
          staticMapLocations_.AddEntriesFrom(input, _repeated_staticMapLocations_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ServerStateResp : pb::IMessage<ServerStateResp> {
  private static readonly pb::MessageParser<ServerStateResp> _parser = new pb::MessageParser<ServerStateResp>(() => new ServerStateResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerStateResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CenterReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerStateResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerStateResp(ServerStateResp other) : this() {
    serverType_ = other.serverType_;
    message_ = other.message_;
    serverConfig_ = other.serverConfig_ != null ? other.serverConfig_.Clone() : null;
    servers_ = other.servers_.Clone();
    zones_ = other.zones_.Clone();
    zoneLocations_ = other.zoneLocations_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerStateResp Clone() {
    return new ServerStateResp(this);
  }

  /// <summary>Field number for the "ServerType" field.</summary>
  public const int ServerTypeFieldNumber = 1;
  private string serverType_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ServerType {
    get { return serverType_; }
    set {
      serverType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Message" field.</summary>
  public const int MessageFieldNumber = 2;
  private string message_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ServerConfig" field.</summary>
  public const int ServerConfigFieldNumber = 3;
  private global::ServerConfig serverConfig_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ServerConfig ServerConfig {
    get { return serverConfig_; }
    set {
      serverConfig_ = value;
    }
  }

  /// <summary>Field number for the "Servers" field.</summary>
  public const int ServersFieldNumber = 4;
  private static readonly pb::FieldCodec<global::Server> _repeated_servers_codec
      = pb::FieldCodec.ForMessage(34, global::Server.Parser);
  private readonly pbc::RepeatedField<global::Server> servers_ = new pbc::RepeatedField<global::Server>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Server> Servers {
    get { return servers_; }
  }

  /// <summary>Field number for the "Zones" field.</summary>
  public const int ZonesFieldNumber = 5;
  private static readonly pb::FieldCodec<global::Zone> _repeated_zones_codec
      = pb::FieldCodec.ForMessage(42, global::Zone.Parser);
  private readonly pbc::RepeatedField<global::Zone> zones_ = new pbc::RepeatedField<global::Zone>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Zone> Zones {
    get { return zones_; }
  }

  /// <summary>Field number for the "ZoneLocations" field.</summary>
  public const int ZoneLocationsFieldNumber = 6;
  private static readonly pb::FieldCodec<global::ZoneLocation> _repeated_zoneLocations_codec
      = pb::FieldCodec.ForMessage(50, global::ZoneLocation.Parser);
  private readonly pbc::RepeatedField<global::ZoneLocation> zoneLocations_ = new pbc::RepeatedField<global::ZoneLocation>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ZoneLocation> ZoneLocations {
    get { return zoneLocations_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerStateResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerStateResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ServerType != other.ServerType) return false;
    if (Message != other.Message) return false;
    if (!object.Equals(ServerConfig, other.ServerConfig)) return false;
    if(!servers_.Equals(other.servers_)) return false;
    if(!zones_.Equals(other.zones_)) return false;
    if(!zoneLocations_.Equals(other.zoneLocations_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ServerType.Length != 0) hash ^= ServerType.GetHashCode();
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    if (serverConfig_ != null) hash ^= ServerConfig.GetHashCode();
    hash ^= servers_.GetHashCode();
    hash ^= zones_.GetHashCode();
    hash ^= zoneLocations_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ServerType.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ServerType);
    }
    if (Message.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Message);
    }
    if (serverConfig_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(ServerConfig);
    }
    servers_.WriteTo(output, _repeated_servers_codec);
    zones_.WriteTo(output, _repeated_zones_codec);
    zoneLocations_.WriteTo(output, _repeated_zoneLocations_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ServerType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerType);
    }
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (serverConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerConfig);
    }
    size += servers_.CalculateSize(_repeated_servers_codec);
    size += zones_.CalculateSize(_repeated_zones_codec);
    size += zoneLocations_.CalculateSize(_repeated_zoneLocations_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerStateResp other) {
    if (other == null) {
      return;
    }
    if (other.ServerType.Length != 0) {
      ServerType = other.ServerType;
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    if (other.serverConfig_ != null) {
      if (serverConfig_ == null) {
        ServerConfig = new global::ServerConfig();
      }
      ServerConfig.MergeFrom(other.ServerConfig);
    }
    servers_.Add(other.servers_);
    zones_.Add(other.zones_);
    zoneLocations_.Add(other.zoneLocations_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ServerType = input.ReadString();
          break;
        }
        case 18: {
          Message = input.ReadString();
          break;
        }
        case 26: {
          if (serverConfig_ == null) {
            ServerConfig = new global::ServerConfig();
          }
          input.ReadMessage(ServerConfig);
          break;
        }
        case 34: {
          servers_.AddEntriesFrom(input, _repeated_servers_codec);
          break;
        }
        case 42: {
          zones_.AddEntriesFrom(input, _repeated_zones_codec);
          break;
        }
        case 50: {
          zoneLocations_.AddEntriesFrom(input, _repeated_zoneLocations_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ServerInfo : pb::IMessage<ServerInfo> {
  private static readonly pb::MessageParser<ServerInfo> _parser = new pb::MessageParser<ServerInfo>(() => new ServerInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CenterReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerInfo(ServerInfo other) : this() {
    serverID_ = other.serverID_;
    address_ = other.address_;
    state_ = other.state_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerInfo Clone() {
    return new ServerInfo(this);
  }

  /// <summary>Field number for the "ServerID" field.</summary>
  public const int ServerIDFieldNumber = 1;
  private int serverID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ServerID {
    get { return serverID_; }
    set {
      serverID_ = value;
    }
  }

  /// <summary>Field number for the "Address" field.</summary>
  public const int AddressFieldNumber = 2;
  private pb::ByteString address_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Address {
    get { return address_; }
    set {
      address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "State" field.</summary>
  public const int StateFieldNumber = 3;
  private global::ServerState state_ = global::ServerState.Start;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ServerState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ServerID != other.ServerID) return false;
    if (Address != other.Address) return false;
    if (State != other.State) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ServerID != 0) hash ^= ServerID.GetHashCode();
    if (Address.Length != 0) hash ^= Address.GetHashCode();
    if (State != global::ServerState.Start) hash ^= State.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ServerID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ServerID);
    }
    if (Address.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Address);
    }
    if (State != global::ServerState.Start) {
      output.WriteRawTag(24);
      output.WriteEnum((int) State);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ServerID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerID);
    }
    if (Address.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Address);
    }
    if (State != global::ServerState.Start) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerInfo other) {
    if (other == null) {
      return;
    }
    if (other.ServerID != 0) {
      ServerID = other.ServerID;
    }
    if (other.Address.Length != 0) {
      Address = other.Address;
    }
    if (other.State != global::ServerState.Start) {
      State = other.State;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ServerID = input.ReadInt32();
          break;
        }
        case 18: {
          Address = input.ReadBytes();
          break;
        }
        case 24: {
          State = (global::ServerState) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class ServerInfoList : pb::IMessage<ServerInfoList> {
  private static readonly pb::MessageParser<ServerInfoList> _parser = new pb::MessageParser<ServerInfoList>(() => new ServerInfoList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerInfoList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CenterReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerInfoList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerInfoList(ServerInfoList other) : this() {
    servers_ = other.servers_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerInfoList Clone() {
    return new ServerInfoList(this);
  }

  /// <summary>Field number for the "Servers" field.</summary>
  public const int ServersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ServerInfo> _repeated_servers_codec
      = pb::FieldCodec.ForMessage(10, global::ServerInfo.Parser);
  private readonly pbc::RepeatedField<global::ServerInfo> servers_ = new pbc::RepeatedField<global::ServerInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ServerInfo> Servers {
    get { return servers_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerInfoList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerInfoList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!servers_.Equals(other.servers_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= servers_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    servers_.WriteTo(output, _repeated_servers_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += servers_.CalculateSize(_repeated_servers_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerInfoList other) {
    if (other == null) {
      return;
    }
    servers_.Add(other.servers_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          servers_.AddEntriesFrom(input, _repeated_servers_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateETC : pb::IMessage<UpdateETC> {
  private static readonly pb::MessageParser<UpdateETC> _parser = new pb::MessageParser<UpdateETC>(() => new UpdateETC());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateETC> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CenterReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateETC() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateETC(UpdateETC other) : this() {
    serverConfig_ = other.serverConfig_ != null ? other.serverConfig_.Clone() : null;
    servers_ = other.servers_.Clone();
    zones_ = other.zones_.Clone();
    zoneLocations_ = other.zoneLocations_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateETC Clone() {
    return new UpdateETC(this);
  }

  /// <summary>Field number for the "ServerConfig" field.</summary>
  public const int ServerConfigFieldNumber = 1;
  private global::ServerConfig serverConfig_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ServerConfig ServerConfig {
    get { return serverConfig_; }
    set {
      serverConfig_ = value;
    }
  }

  /// <summary>Field number for the "Servers" field.</summary>
  public const int ServersFieldNumber = 2;
  private static readonly pb::FieldCodec<global::Server> _repeated_servers_codec
      = pb::FieldCodec.ForMessage(18, global::Server.Parser);
  private readonly pbc::RepeatedField<global::Server> servers_ = new pbc::RepeatedField<global::Server>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Server> Servers {
    get { return servers_; }
  }

  /// <summary>Field number for the "Zones" field.</summary>
  public const int ZonesFieldNumber = 3;
  private static readonly pb::FieldCodec<global::Zone> _repeated_zones_codec
      = pb::FieldCodec.ForMessage(26, global::Zone.Parser);
  private readonly pbc::RepeatedField<global::Zone> zones_ = new pbc::RepeatedField<global::Zone>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Zone> Zones {
    get { return zones_; }
  }

  /// <summary>Field number for the "ZoneLocations" field.</summary>
  public const int ZoneLocationsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::ZoneLocation> _repeated_zoneLocations_codec
      = pb::FieldCodec.ForMessage(34, global::ZoneLocation.Parser);
  private readonly pbc::RepeatedField<global::ZoneLocation> zoneLocations_ = new pbc::RepeatedField<global::ZoneLocation>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ZoneLocation> ZoneLocations {
    get { return zoneLocations_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateETC);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateETC other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ServerConfig, other.ServerConfig)) return false;
    if(!servers_.Equals(other.servers_)) return false;
    if(!zones_.Equals(other.zones_)) return false;
    if(!zoneLocations_.Equals(other.zoneLocations_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (serverConfig_ != null) hash ^= ServerConfig.GetHashCode();
    hash ^= servers_.GetHashCode();
    hash ^= zones_.GetHashCode();
    hash ^= zoneLocations_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (serverConfig_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ServerConfig);
    }
    servers_.WriteTo(output, _repeated_servers_codec);
    zones_.WriteTo(output, _repeated_zones_codec);
    zoneLocations_.WriteTo(output, _repeated_zoneLocations_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (serverConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerConfig);
    }
    size += servers_.CalculateSize(_repeated_servers_codec);
    size += zones_.CalculateSize(_repeated_zones_codec);
    size += zoneLocations_.CalculateSize(_repeated_zoneLocations_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateETC other) {
    if (other == null) {
      return;
    }
    if (other.serverConfig_ != null) {
      if (serverConfig_ == null) {
        ServerConfig = new global::ServerConfig();
      }
      ServerConfig.MergeFrom(other.ServerConfig);
    }
    servers_.Add(other.servers_);
    zones_.Add(other.zones_);
    zoneLocations_.Add(other.zoneLocations_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (serverConfig_ == null) {
            ServerConfig = new global::ServerConfig();
          }
          input.ReadMessage(ServerConfig);
          break;
        }
        case 18: {
          servers_.AddEntriesFrom(input, _repeated_servers_codec);
          break;
        }
        case 26: {
          zones_.AddEntriesFrom(input, _repeated_zones_codec);
          break;
        }
        case 34: {
          zoneLocations_.AddEntriesFrom(input, _repeated_zoneLocations_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
